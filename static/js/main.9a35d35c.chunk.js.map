{"version":3,"sources":["EnglishData.ts","components/Word.tsx","components/Sentence.tsx","components/Pagination.tsx","components/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EnglishData","WORDS","Word","style","display","width","height","voice","window","speechSynthesis","getVoices","filter","lang","partOfSpeech","this","props","length","className","Container","maxWidth","onClick","trans","Typography","component","Box","visibleTrans","fontSize","m","word","noValidate","autoComplete","TextField","error","isInputWordCompleted","label","fullWidth","value","inputWordString","variant","onChange","o","changeInputWord","target","toLowerCase","changeInputWordCompleted","utter","SpeechSynthesisUtterance","text","speak","Grid","container","direction","spacing","justify","alignItems","item","xs","Button","color","React","Sentence","rate","Pagination","onClickPrev","onClickNext","Menu","useState","menuToggle","setMenuToggle","checkA","setCheckA","setThemeMode","IconButton","aria-label","edge","Drawer","anchor","open","onClose","List","ListItem","Switch","checked","name","inputProps","App","state","slides","wordIndex","visibleSentenceTrans","theme","createMuiTheme","palette","primary","main","colors","type","isCompleted","ThemeProvider","CssBaseline","setState","val","changeInputWordComplete","sentence","sentenceTrans","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAqBA,E,kCAAAA,EACHC,MAChB,CACE,CACE,KAAQ,SACR,aAAgB,eAChB,MAAS,+DACT,SAAY,2FACZ,cAAiB,yMAEnB,CACE,KAAQ,SACR,aAAgB,eAChB,MAAS,iCACT,SAAY,2FACZ,cAAiB,yMAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,eACT,SAAY,2FACZ,cAAiB,yMAEnB,CACE,KAAQ,aACR,aAAgB,eAChB,MAAS,iCACT,SAAY,2FACZ,cAAiB,yMAEnB,CACE,KAAQ,YACR,aAAgB,qBAChB,MAAS,yDACT,SAAY,yDACZ,cAAiB,sKAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,eACT,SAAY,yDACZ,cAAiB,sKAEnB,CACE,KAAQ,QACR,aAAgB,eAChB,MAAS,mDACT,SAAY,yDACZ,cAAiB,sKAEnB,CACE,KAAQ,aACR,aAAgB,qBAChB,MAAS,qEACT,SAAY,yDACZ,cAAiB,sKAEnB,CACE,KAAQ,QACR,aAAgB,eAChB,MAAS,qBACT,SAAY,qDACZ,cAAiB,wIAEnB,CACE,KAAQ,OACR,aAAgB,eAChB,MAAS,uFACT,SAAY,qDACZ,cAAiB,wIAEnB,CACE,KAAQ,SACR,aAAgB,eAChB,MAAS,qBACT,SAAY,qDACZ,cAAiB,wIAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,yDACT,SAAY,wDACZ,cAAiB,8IAEnB,CACE,KAAQ,QACR,aAAgB,eAChB,MAAS,2EACT,SAAY,wDACZ,cAAiB,8IAEnB,CACE,KAAQ,SACR,aAAgB,qBAChB,MAAS,+DACT,SAAY,wDACZ,cAAiB,8IAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,mGACT,SAAY,wDACZ,cAAiB,8IAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,iCACT,SAAY,kEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,uCACT,SAAY,kEACZ,cAAiB,kLAEnB,CACE,KAAQ,aACR,aAAgB,qBAChB,MAAS,+DACT,SAAY,kEACZ,cAAiB,kLAEnB,CACE,KAAQ,aACR,aAAgB,eAChB,MAAS,iCACT,SAAY,kEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,qBACT,SAAY,+CACZ,cAAiB,oGAEnB,CACE,KAAQ,gBACR,aAAgB,GAChB,MAAS,iCACT,SAAY,+CACZ,cAAiB,oGAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,eACT,SAAY,+CACZ,cAAiB,oGAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,eACT,SAAY,oEACZ,cAAiB,wLAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,uCACT,SAAY,oEACZ,cAAiB,wLAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,eACT,SAAY,oEACZ,cAAiB,wLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,mGACT,SAAY,oEACZ,cAAiB,wLAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,2BACT,SAAY,wEACZ,cAAiB,kKAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,iFACT,SAAY,wEACZ,cAAiB,kKAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,2BACT,SAAY,wEACZ,cAAiB,kKAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,yDACT,SAAY,wEACZ,cAAiB,kKAEnB,CACE,KAAQ,SACR,aAAgB,qBAChB,MAAS,qBACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,UACR,aAAgB,eAChB,MAAS,uFACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,qBAChB,MAAS,2BACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,2BACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,qBACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,WACR,aAAgB,eAChB,MAAS,eACT,SAAY,uEACZ,cAAiB,kLAEnB,CACE,KAAQ,YACR,aAAgB,eAChB,MAAS,eACT,SAAY,oEACZ,cAAiB,8LAEnB,CACE,KAAQ,OACR,aAAgB,eAChB,MAAS,iCACT,SAAY,oEACZ,cAAiB,8LAEnB,CACE,KAAQ,eACR,aAAgB,qBAChB,MAAS,iIACT,SAAY,oEACZ,cAAiB,+L,8DC7JRC,E,4JAhGb,WAAW,IAAD,OACFC,EAA6B,CACjCC,QAAS,eACTC,MAAO,OACPC,OAAQ,OAKJC,EAFQC,OAAOC,gBACAC,YAAYC,QAAO,SAAAJ,GAAK,MAAmB,UAAfA,EAAMK,QAClC,GACfC,EAAeC,KAAKC,MAAMF,aAAaG,OAASF,KAAKC,MAAMF,aAAe,GAEhF,OACE,qBAAKI,UAAU,YAAf,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,qBAAKC,QAAS,kBAAM,EAAKL,MAAMK,WAA/B,SACE,oBAAGH,UAAU,OAAb,UAAqBH,KAAKC,MAAMM,MAAM,uBAAMJ,UAAU,eAAhB,cAAiCJ,EAAjC,YAExC,cAACS,EAAA,EAAD,CAAYC,UAAU,MAAtB,SACE,cAACC,EAAA,EAAD,CACEP,UAAWH,KAAKC,MAAMU,aACtBC,SAAS,cAAcC,EAAG,EAF5B,SAIGb,KAAKC,MAAMa,SAGhB,sBAAMC,YAAU,EAACC,aAAa,MAA9B,SACE,8BACE,cAACC,EAAA,EAAD,CACEC,OAAQlB,KAAKC,MAAMkB,qBACnBC,MAAQpB,KAAKC,MAAMkB,qBAAuB,KAAO,aACjDE,WAAW,EACXC,MAAOtB,KAAKC,MAAMsB,gBAClBC,QAAQ,WACRC,SAAU,SAACC,GAGP,GADA,EAAKzB,MAAM0B,gBAAgBD,EAAEE,OAAON,MAAMO,eACtC,EAAK5B,MAAMa,KAAKe,gBAAkBH,EAAEE,OAAON,MAAMO,cAAe,CAClE,EAAK5B,MAAM6B,0BAAyB,GACpC,EAAK7B,MAAMK,UACX,IAAMyB,EAAQ,IAAIC,yBAClBD,EAAME,KAAO,MAAQ,EAAKhC,MAAMa,KAChCiB,EAAMjC,KAAO,QACbiC,EAAMtC,MAAQA,EACdC,OAAOC,gBAAgBuC,MAAMH,QAG7B,EAAK9B,MAAM6B,0BAAyB,UAQhD,uBACA,eAACK,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAS,EACTC,QAAQ,SACRC,WAAW,SALb,UAOE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEtD,MAAOA,EACPmC,QAAQ,WACRoB,MAAM,UACNtC,QAAS,kBAAM,EAAKL,MAAMK,WAJ5B,uBASF,cAAC6B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEtD,MAAOA,EACPmC,QAAQ,WACRoB,MAAM,YACNtC,QAAS,WACP,IAAMyB,EAAQ,IAAIC,yBAClBD,EAAME,KAAO,EAAKhC,MAAMa,KACxBiB,EAAMjC,KAAO,QACbiC,EAAMtC,MAAQA,EACdC,OAAOC,gBAAgBuC,MAAMH,IATjC,gC,GA3EKc,aC6DJC,E,4JAlEb,WAAW,IAAD,OACFzD,EAA6B,CACjCC,QAAS,eACTC,MAAO,OACPC,OAAQ,OAKJC,EAFQC,OAAOC,gBACAC,YAAYC,QAAO,SAAAJ,GAAK,MAAmB,UAAfA,EAAMK,QAClC,GAErB,OACE,qBAAKK,UAAU,YAAf,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,qBAAKC,QAAS,kBAAM,EAAKL,MAAMK,WAA/B,SACE,mBAAGH,UAAU,OAAb,SAAqBH,KAAKC,MAAMM,UAElC,cAACC,EAAA,EAAD,CAAYC,UAAU,MAAtB,SACE,cAACC,EAAA,EAAD,CACEP,UAAWH,KAAKC,MAAMU,aACtBC,SAAS,cAAcC,EAAG,EAF5B,SAIGb,KAAKC,MAAMa,SAGhB,eAACqB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAS,EACTC,QAAQ,SACRC,WAAW,SALb,UAOE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEtD,MAAOA,EACPmC,QAAQ,WACRoB,MAAM,UACNtC,QAAS,kBAAM,EAAKL,MAAMK,WAJ5B,uBASF,cAAC6B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEtD,MAAOA,EACPmC,QAAQ,WACRoB,MAAM,YACNtC,QAAS,WACP,IAAMyB,EAAQ,IAAIC,yBAClBD,EAAME,KAAO,EAAKhC,MAAMa,KACxBiB,EAAMjC,KAAO,QACbiC,EAAMtC,MAAQA,EACdsC,EAAMgB,KAAO,GACbrD,OAAOC,gBAAgBuC,MAAMH,IAVjC,gC,GA5CSc,aCgBRG,EA1BkE,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAC9F,OACE,eAACf,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVE,QAAQ,eACRC,WAAW,WAJX,UAME,cAACG,EAAA,EAAD,CACEnB,QAAQ,YACRoB,MAAM,UACNtC,QAAS,kBAAM2C,KAHjB,kBAOA,cAACN,EAAA,EAAD,CACEnB,QAAQ,YACRoB,MAAM,UACNtC,QAAS,kBAAM4C,KAHjB,sB,8ECsCSC,EArDQ,SAAC,EAAD,GAAa,oCACEC,oBAAS,GADZ,mBAC1BC,EAD0B,KACdC,EADc,OAELF,oBAAS,GAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,OAGCJ,mBAAS,QAHV,mBAGfK,GAHe,WAkBjC,OACE,qCACE,cAACC,EAAA,EAAD,CACEd,MAAM,UACNe,aAAW,cACXC,KAAK,MACLtD,QAAS,WAlBbgD,GAAeD,MAqBb,cAACQ,EAAA,EAAD,CACEC,OAAU,OACVC,KAAQV,EACRW,QAAW,kBAAMV,GAAc,IAHjC,SAKE,8BACE,cAACW,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,wBAEE,cAACC,EAAA,EAAD,CACEP,KAAK,MACLQ,QAASb,EACT9B,SA9BU,WACtB+B,GAAWD,GAETE,EADEF,EACW,QAEA,SA0BHX,MAAM,UACNyB,KAAK,SACLC,WAAY,CAAE,aAAc,2CAMtC,cAAC,IAAD,QC8ESC,E,kDAnGb,WAAYtE,GAAkB,IAAD,8BAC3B,cAAMA,IAEDuE,MAAQ,CACXC,OAAQvF,EAAYC,MACpBuF,UAAW,EACX/D,aAAc,mBACdgE,qBAAsB,mBACtBxD,sBAAsB,EACtBI,gBAAiB,IATQ,E,0CAa7B,WAAW,IAAD,eACFqD,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAY,MAEpBC,KAAM,UAsCJT,EAAM,UAAGzE,KAAKwE,MAAMC,cAAd,QAAwB,GAC9BC,EAAS,UAAG1E,KAAKwE,MAAME,iBAAd,QAA2B,EACpC/D,EAAY,UAAGX,KAAKwE,MAAM7D,oBAAd,QAA8B,mBAC1CgE,EAAoB,UAAG3E,KAAKwE,MAAMG,4BAAd,QAAsC,mBAC1DQ,EAAcnF,KAAKwE,MAAMrD,qBACzBI,EAAkBvB,KAAKwE,MAAMjD,gBAGnC,OACE,eAAC6D,EAAA,EAAD,CAAeR,MAAOA,EAAtB,UACE,cAACS,EAAA,EAAD,IACA,cAAC,EAAD,IACA,eAACjF,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,EAAD,CACES,KAAM2D,EAAOC,GAAW5D,KACxBf,aAAc0E,EAAOC,GAAW3E,aAChCQ,MAAOkE,EAAOC,GAAWnE,MACzBI,aAAgBA,EAChBQ,qBAAsBgE,EACtB5D,gBAAiBA,EACjBjB,QAAS,kBAAM,EAAKgF,SAAS,CAAC3E,aAAa,uBAC3CmB,yBAA0B,SAACyD,GAAD,OA/BF,SAACA,GAC/B,EAAKD,SAAS,CACZnE,qBAAsBoE,IA6BiBC,CAAwBD,IAC3D5D,gBAAiB,SAAC4D,GAAD,OA1BD,SAACA,GACvB,EAAKD,SAAS,CAAC/D,gBAAiBgE,IAyBA5D,CAAgB4D,MAE5C,uBACA,cAAC,EAAD,CACEzE,KAAM2D,EAAOC,GAAWe,SACxBlF,MAAOkE,EAAOC,GAAWgB,cACzB/E,aAAgBgE,EAChBrE,QAAW,kBAAM,EAAKgF,SAAS,CAACX,qBAAqB,yBAEvD,uBACA,cAAC,EAAD,CACE1B,YAnEU,WACZ,EAAKuB,MAAME,UAAY,GACzB,EAAKY,SAAS,CACZZ,UAAW,EAAKF,MAAME,UAAY,EAClC/D,aAAc,mBACdgE,qBAAsB,mBACtBxD,sBAAsB,EACtBI,gBAAiB,MA6Df2B,YAxDU,WACZ,EAAKsB,MAAME,UAAY,EAAKF,MAAMC,OAAOvE,OAAO,GAClD,EAAKoF,SAAS,CACZZ,UAAW,EAAKF,MAAME,UAAY,EAClC/D,aAAc,mBACdgE,qBAAsB,mBACtBxD,sBAAsB,EACtBI,gBAAiB,kB,GA3CTsB,IAAM8C,WChBTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a35d35c.chunk.js","sourcesContent":["export default class EnglishData {\n  static readonly WORDS = \n  [\n    {\n      \"word\": \"review\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"検討する。目を通す。\",\n      \"sentence\": \"Mr.Kumar has already finished reviewing our proposal and has asked for some adjustments.\",\n      \"sentenceTrans\": \"Kumarさんは、我々の提案をすでに検討し終え、いくつか調整を求めてきた。\"\n    },\n    {\n      \"word\": \"review\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"検討、論評\",\n      \"sentence\": \"Mr.Kumar has already finished reviewing our proposal and has asked for some adjustments.\",\n      \"sentenceTrans\": \"Kumarさんは、我々の提案をすでに検討し終え、いくつか調整を求めてきた。\"\n    },\n    {\n      \"word\": \"proposal\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"提案\",\n      \"sentence\": \"Mr.Kumar has already finished reviewing our proposal and has asked for some adjustments.\",\n      \"sentenceTrans\": \"Kumarさんは、我々の提案をすでに検討し終え、いくつか調整を求めてきた。\"\n    },\n    {\n      \"word\": \"adjustment\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"調整、調節\",\n      \"sentence\": \"Mr.Kumar has already finished reviewing our proposal and has asked for some adjustments.\",\n      \"sentenceTrans\": \"Kumarさんは、我々の提案をすでに検討し終え、いくつか調整を求めてきた。\"\n    },\n    {\n      \"word\": \"overnight\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"一晩の、翌日配送の\",\n      \"sentence\": \"Overnight camping is allowed only in designated areas.\",\n      \"sentenceTrans\": \"キャンプ泊は、指定されたエリアでのみ許可されています。\"\n    },\n    {\n      \"word\": \"overnight\",\n      \"partOfSpeech\": \"副詞\",\n      \"trans\": \"一晩\",\n      \"sentence\": \"Overnight camping is allowed only in designated areas.\",\n      \"sentenceTrans\": \"キャンプ泊は、指定されたエリアでのみ許可されています。\"\n    },\n    {\n      \"word\": \"allow\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"許す、可能にする\",\n      \"sentence\": \"Overnight camping is allowed only in designated areas.\",\n      \"sentenceTrans\": \"キャンプ泊は、指定されたエリアでのみ許可されています。\"\n    },\n    {\n      \"word\": \"designated\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"指定された、指名された\",\n      \"sentence\": \"Overnight camping is allowed only in designated areas.\",\n      \"sentenceTrans\": \"キャンプ泊は、指定されたエリアでのみ許可されています。\"\n    },\n    {\n      \"word\": \"diner\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"食事客\",\n      \"sentence\": \"Some diners are facing each other under an awning.\",\n      \"sentenceTrans\": \"数名の食事客が、日除けの下で向き合っている。\"\n    },\n    {\n      \"word\": \"face\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"（〜の方を）向く。直面する。\",\n      \"sentence\": \"Some diners are facing each other under an awning.\",\n      \"sentenceTrans\": \"数名の食事客が、日除けの下で向き合っている。\"\n    },\n    {\n      \"word\": \"awning\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"日除け\",\n      \"sentence\": \"Some diners are facing each other under an awning.\",\n      \"sentenceTrans\": \"数名の食事客が、日除けの下で向き合っている。\"\n    },\n    {\n      \"word\": \"artwork\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"芸術作品、イラスト\",\n      \"sentence\": \"Some artwork is mounted on a wall beside a staircase.\",\n      \"sentenceTrans\": \"芸術作品が、階段の脇の壁に据えつけられている。\"\n    },\n    {\n      \"word\": \"mount\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"（上に）据える。固定する\",\n      \"sentence\": \"Some artwork is mounted on a wall beside a staircase.\",\n      \"sentenceTrans\": \"芸術作品が、階段の脇の壁に据えつけられている。\"\n    },\n    {\n      \"word\": \"beside\",\n      \"partOfSpeech\": \"前置詞\",\n      \"trans\": \"〜の脇に、〜のそばに\",\n      \"sentence\": \"Some artwork is mounted on a wall beside a staircase.\",\n      \"sentenceTrans\": \"芸術作品が、階段の脇の壁に据えつけられている。\"\n    },\n    {\n      \"word\": \"staircase\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"（室内にある手すりのついた）階段\",\n      \"sentence\": \"Some artwork is mounted on a wall beside a staircase.\",\n      \"sentenceTrans\": \"芸術作品が、階段の脇の壁に据えつけられている。\"\n    },\n    {\n      \"word\": \"register\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"登録する。\",\n      \"sentence\": \"Register today for this remarkable management training program.\",\n      \"sentenceTrans\": \"この駐もの区の経営堅守プログラムに、今日、ご登録ください。\"\n    },\n    {\n      \"word\": \"register\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"レジ・登録簿\",\n      \"sentence\": \"Register today for this remarkable management training program.\",\n      \"sentenceTrans\": \"この駐もの区の経営堅守プログラムに、今日、ご登録ください。\"\n    },\n    {\n      \"word\": \"remarkable\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"注目すべき、驚くべき\",\n      \"sentence\": \"Register today for this remarkable management training program.\",\n      \"sentenceTrans\": \"この駐もの区の経営堅守プログラムに、今日、ご登録ください。\"\n    },\n    {\n      \"word\": \"management\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"経営、管理\",\n      \"sentence\": \"Register today for this remarkable management training program.\",\n      \"sentenceTrans\": \"この駐もの区の経営堅守プログラムに、今日、ご登録ください。\"\n    },\n    {\n      \"word\": \"lamppost\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"該当柱\",\n      \"sentence\": \"A lamppost is casting a shadow on a walkway.\",\n      \"sentenceTrans\": \"該当柱が歩道に影を落としている。\"\n    },\n    {\n      \"word\": \"cast a shadow\",\n      \"partOfSpeech\": \"\",\n      \"trans\": \"影を落とす\",\n      \"sentence\": \"A lamppost is casting a shadow on a walkway.\",\n      \"sentenceTrans\": \"該当柱が歩道に影を落としている。\"\n    },\n    {\n      \"word\": \"walkway\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"歩道\",\n      \"sentence\": \"A lamppost is casting a shadow on a walkway.\",\n      \"sentenceTrans\": \"該当柱が歩道に影を落としている。\"\n    },\n    {\n      \"word\": \"directly\",\n      \"partOfSpeech\": \"副詞\",\n      \"trans\": \"直接\",\n      \"sentence\": \"The Spanish painter was directly influenced by African artifacts.\",\n      \"sentenceTrans\": \"そのスペイン人の画家は、アフリカの工芸品に直接影響を受けた。\"\n    },\n    {\n      \"word\": \"influence\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"影響を与える\",\n      \"sentence\": \"The Spanish painter was directly influenced by African artifacts.\",\n      \"sentenceTrans\": \"そのスペイン人の画家は、アフリカの工芸品に直接影響を受けた。\"\n    },\n    {\n      \"word\": \"influence\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"影響\",\n      \"sentence\": \"The Spanish painter was directly influenced by African artifacts.\",\n      \"sentenceTrans\": \"そのスペイン人の画家は、アフリカの工芸品に直接影響を受けた。\"\n    },\n    {\n      \"word\": \"artifact\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"（歴史的・文化価値のある）工芸品\",\n      \"sentence\": \"The Spanish painter was directly influenced by African artifacts.\",\n      \"sentenceTrans\": \"そのスペイン人の画家は、アフリカの工芸品に直接影響を受けた。\"\n    },\n    {\n      \"word\": \"tourism\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"観光事業\",\n      \"sentence\": \"Tourism accounts for roughly four percent of the country's workforce.\",\n      \"sentenceTrans\": \"環境事業は、その国の労働人口のおおよそ4%を占めている。\"\n    },\n    {\n      \"word\": \"account\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"（割合を）占める。説明する\",\n      \"sentence\": \"Tourism accounts for roughly four percent of the country's workforce.\",\n      \"sentenceTrans\": \"環境事業は、その国の労働人口のおおよそ4%を占めている。\"\n    },\n    {\n      \"word\": \"roughly\",\n      \"partOfSpeech\": \"副詞\",\n      \"trans\": \"おおよそ\",\n      \"sentence\": \"Tourism accounts for roughly four percent of the country's workforce.\",\n      \"sentenceTrans\": \"環境事業は、その国の労働人口のおおよそ4%を占めている。\"\n    },\n    {\n      \"word\": \"workforce\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"労働人口、全従業員\",\n      \"sentence\": \"Tourism accounts for roughly four percent of the country's workforce.\",\n      \"sentenceTrans\": \"環境事業は、その国の労働人口のおおよそ4%を占めている。\"\n    },\n    {\n      \"word\": \"strict\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"厳しい\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"enforce\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"実行する。施行する。教説する\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"downtown\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"中心街の\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"downtown\",\n      \"partOfSpeech\": \"副詞\",\n      \"trans\": \"中心街で\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"downtown\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"中心街\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"district\",\n      \"partOfSpeech\": \"名詞\",\n      \"trans\": \"地区\",\n      \"sentence\": \"Strict parking rules are enforced in the downtown business district.\",\n      \"sentenceTrans\": \"厳しい駐車ルールが、中心街のビジネス地区で実行されている。\"\n    },\n    {\n      \"word\": \"currently\",\n      \"partOfSpeech\": \"副詞\",\n      \"trans\": \"現在\",\n      \"sentence\": \"We are currently seeking an enthusiastic person to join our team.\",\n      \"sentenceTrans\": \"我々は、チームの一員となる、熱意のある方を現在募集しています。\"\n    },\n    {\n      \"word\": \"seek\",\n      \"partOfSpeech\": \"動詞\",\n      \"trans\": \"探し求める\",\n      \"sentence\": \"We are currently seeking an enthusiastic person to join our team.\",\n      \"sentenceTrans\": \"我々は、チームの一員となる、熱意のある方を現在募集しています。\"\n    },\n    {\n      \"word\": \"enthusiastic\",\n      \"partOfSpeech\": \"形容詞\",\n      \"trans\": \"熱心あ、熱狂的な、関心が高い、乗り気である\",\n      \"sentence\": \"We are currently seeking an enthusiastic person to join our team.\",\n      \"sentenceTrans\": \"我々は、チームの一員となる、熱意のある方を現在募集しています。\"\n    }\n  ]\n}","import * as React from 'react';\nimport { Container, Button, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport 'fontsource-roboto';\n\n\ninterface WordProps {\n    word: string;\n    partOfSpeech: string;\n    trans: string;\n    visibleTrans: string;\n    isInputWordCompleted: boolean;\n    inputWordString:string\n    onClick: () => void;\n    changeInputWordCompleted: (val:boolean) => void;\n    changeInputWord: (val:string) => void;    \n}\n\nclass Word extends React.Component<WordProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices().filter(voice => voice.lang === 'en-US');\n    const voice = voices[0];\n    const partOfSpeech = this.props.partOfSpeech.length ? this.props.partOfSpeech : '';\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <div onClick={() => this.props.onClick()}>\n            <p className=\"word\">{this.props.trans}<span className=\"partOfSpeech\">[{partOfSpeech}]</span></p>\n          </div>\n          <Typography component=\"div\">\n            <Box\n              className={this.props.visibleTrans}\n              fontSize=\"h5.fontSize\" m={1}\n            >\n              {this.props.word}\n            </Box>\n          </Typography>\n          <form noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                error={!this.props.isInputWordCompleted}\n                label= {this.props.isInputWordCompleted ? \"OK\" : \"input word\"}\n                fullWidth={true}\n                value={this.props.inputWordString}\n                variant=\"outlined\"\n                onChange={(o) => \n                  {\n                    this.props.changeInputWord(o.target.value.toLowerCase());\n                    if (this.props.word.toLowerCase() === o.target.value.toLowerCase()) {\n                      this.props.changeInputWordCompleted(true);\n                      this.props.onClick();\n                      const utter = new SpeechSynthesisUtterance();\n                      utter.text = 'OK.' + this.props.word;\n                      utter.lang = \"en-US\";\n                      utter.voice = voice;\n                      window.speechSynthesis.speak(utter);\n    \n                    } else {\n                      this.props.changeInputWordCompleted(false);\n                    }\n                  }\n                }\n              />\n            </div>\n          </form>\n          \n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => this.props.onClick()}\n              >\n                english\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => {\n                  const utter = new SpeechSynthesisUtterance();\n                  utter.text = this.props.word;\n                  utter.lang = \"en-US\";\n                  utter.voice = voice;\n                  window.speechSynthesis.speak(utter);\n                }}\n              >\n                play\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Word;","import * as React from 'react';\nimport { Container, Button, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport 'fontsource-roboto';\n\n\ninterface SentenceProps {\n    word: string;\n    trans: string;\n    visibleTrans: string;\n    onClick: () => void;\n}\n\nclass Sentence extends React.Component<SentenceProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices().filter(voice => voice.lang === 'en-US');\n    const voice = voices[0];\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <div onClick={() => this.props.onClick()}>\n            <p className=\"word\">{this.props.trans}</p>\n          </div>\n          <Typography component=\"div\">\n            <Box\n              className={this.props.visibleTrans}\n              fontSize=\"h6.fontSize\" m={1}\n            >\n              {this.props.word}\n            </Box>\n          </Typography>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => this.props.onClick()}\n              >\n                english\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => {\n                  const utter = new SpeechSynthesisUtterance();\n                  utter.text = this.props.word;\n                  utter.lang = \"en-US\";\n                  utter.voice = voice;\n                  utter.rate = 0.8;\n                  window.speechSynthesis.speak(utter);\n                }}\n              >\n                play\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Sentence;","import * as React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport 'fontsource-roboto';\n\nconst Pagination: React.FC<{onClickPrev: () => void, onClickNext: () => void}> = ({onClickPrev, onClickNext}) => {\n  return (\n    <Grid\n    container\n    direction=\"row\"\n    justify=\"space-around\"\n    alignItems=\"flex-end\"\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => onClickPrev()}\n      >\n        Prev\n      </Button> \n      <Button \n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => onClickNext()}\n      >\n        Next\n      </Button>\n    </Grid>\n  );\n}\n\nexport default Pagination;","import React, { useState } from 'react';\nimport { Drawer, Switch, IconButton, List, ListItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Menu: React.FC = ({}, {}) => {\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [checkA, setCheckA] = useState(false);\n  const [themeMode, setThemeMode] = useState('dark');\n\n  const toggleDrawer = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const changeThemeMode = () => {\n    setCheckA(!checkA);\n    if (checkA) {\n      setThemeMode('light');\n    } else {\n      setThemeMode('dark');\n    }\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"end\"\n        onClick={() => toggleDrawer()}\n      >\n    </IconButton>\n      <Drawer\n        anchor = {'left'}\n        open = {menuToggle}\n        onClose = {() => setMenuToggle(false)}\n      >\n        <div>\n          <List>\n            <ListItem>\n              Theme Mode\n              <Switch\n                edge=\"end\"\n                checked={checkA}\n                onChange={changeThemeMode}\n                color=\"primary\"\n                name=\"checkA\"\n                inputProps={{ 'aria-label': 'switch-list-label-theme-mode' }}\n              />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <MenuIcon />\n    </>\n  );\n}\n\nexport default Menu;","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Container } from '@material-ui/core';\nimport * as colors from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnglishData from './EnglishData';\nimport 'fontsource-roboto';\nimport Word from './components/Word';\nimport Sentence from './components/Sentence';\nimport PaginateComponent from './components/Pagination';\nimport Menu from './components/Menu';\n\ninterface AppProps {\n}\n\ninterface AppState {\n  slides: {\n    word: string;\n    partOfSpeech: string;\n    trans: string;\n    sentence: string;\n    sentenceTrans: string;\n  }[];\n  wordIndex: number;\n  visibleTrans: string;\n  visibleSentenceTrans: string;\n  isInputWordCompleted: boolean;\n  inputWordString: string;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    \n    this.state = {\n      slides: EnglishData.WORDS,\n      wordIndex: 1,\n      visibleTrans: 'translate-hidden',\n      visibleSentenceTrans: 'translate-hidden',\n      isInputWordCompleted: false,\n      inputWordString: ''\n    }\n  }\n\n  render () {\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: colors.blue[800],\n        },\n        type: \"dark\",\n      },\n    });\n\n    const slidePrev = () => {\n      if (this.state.wordIndex > 1) {\n        this.setState({\n          wordIndex: this.state.wordIndex - 1,\n          visibleTrans: 'translate-hidden',\n          visibleSentenceTrans: 'translate-hidden',\n          isInputWordCompleted: false,\n          inputWordString: ''\n        })\n      }\n    }\n  \n    const slideNext = () => {\n      if (this.state.wordIndex < this.state.slides.length-1) {\n        this.setState({\n          wordIndex: this.state.wordIndex + 1,\n          visibleTrans: 'translate-hidden',\n          visibleSentenceTrans: 'translate-hidden',\n          isInputWordCompleted: false,\n          inputWordString: ''\n        })\n      }\n    }\n\n    const changeInputWordComplete = (val: boolean) => {\n      this.setState({\n        isInputWordCompleted: val\n      });\n    }\n\n    const changeInputWord = (val: string) => {\n      this.setState({inputWordString: val})\n    }\n    \n    const slides = this.state.slides ?? [] ;\n    const wordIndex = this.state.wordIndex ?? 0;\n    const visibleTrans = this.state.visibleTrans ?? 'translate-hidden';\n    const visibleSentenceTrans = this.state.visibleSentenceTrans ?? 'translate-hidden';\n    const isCompleted = this.state.isInputWordCompleted;\n    const inputWordString = this.state.inputWordString;\n\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Menu/>\n        <Container maxWidth=\"sm\">\n          <Word\n            word={slides[wordIndex].word}\n            partOfSpeech={slides[wordIndex].partOfSpeech}\n            trans={slides[wordIndex].trans}\n            visibleTrans = {visibleTrans}\n            isInputWordCompleted={isCompleted}\n            inputWordString={inputWordString}\n            onClick={() => this.setState({visibleTrans:'translate-visible'})}\n            changeInputWordCompleted={(val) => changeInputWordComplete(val)}\n            changeInputWord={(val) => changeInputWord(val)}\n          />\n          <hr/>\n          <Sentence\n            word={slides[wordIndex].sentence}\n            trans={slides[wordIndex].sentenceTrans}\n            visibleTrans = {visibleSentenceTrans}\n            onClick = {() => this.setState({visibleSentenceTrans:'translate-visible'})}\n          />\n          <hr/>\n          <PaginateComponent\n            onClickPrev={slidePrev}\n            onClickNext={slideNext}\n          />\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}