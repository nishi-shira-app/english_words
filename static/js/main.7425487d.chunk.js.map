{"version":3,"sources":["components/GlobalMenu.tsx","context/EnglishData.ts","lib/EnglishVoice.ts","components/WordPage/Word.tsx","components/WordPage/Sentence.tsx","components/Pagination.tsx","components/Part.tsx","components/SideMenu.tsx","pages/WordPage.tsx","components/WordGrammerPage/Grammer.tsx","pages/WordGrammerPage.tsx","components/GrammerPage/Grammer.tsx","context/GrammerData.ts","pages/GrammerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalMenu","props","BottomNavigation","showLabels","style","position","bottom","width","onChange","event","newValue","changeCurrentPage","BottomNavigationAction","showLabel","label","value","icon","EnglishData","this","WORDS","reduce","val","cur","includes","part","push","w","sentence","sentenceTrans","some","v","EnglishVoice","text","lang","rate","voice","window","speechSynthesis","getVoices","filter","utter","SpeechSynthesisUtterance","speak","Word","display","height","partOfSpeech","length","className","Container","maxWidth","Grid","container","item","xs","Typography","variant","trans","Avatar","component","substr","visibleWord","word","direction","TextField","error","isInputWordCompleted","fullWidth","inputWordString","o","changeInputWord","target","toLowerCase","changeInputWordCompleted","onClick","speech","spacing","justify","alignItems","Button","color","React","Sentence","Box","visibleSentence","m","fontSize","speechSpeedRate","Pagination","onClickPrev","onClickNext","Part","currentPart","SideMenu","useState","menuToggle","setMenuToggle","parts","classes","makeStyles","list","useStyles","IconButton","aria-label","edge","Drawer","anchor","open","onClose","List","map","p","ListItem","button","changeCurrentPart","ListItemText","primary","ListItemIcon","Divider","Slider","min","max","step","aria-labelledby","valueLabelDisplay","e","changeSpeechSpeedRate","WordPage","getFirstPart","slides","setSlides","wordIndex","setWordIndex","setVisibleWord","setCurrentPart","setVisibleSentence","setIsInputWordCompleted","setInputWordString","setSpeechSpeedRate","getParts","s","Grammer","stockWords","ansWords","lastChar","buttonStyle","minWidth","textTransform","margin","wordsStyle","translate","index","isAnsComplated","size","moveStockWords","moveAnsWords","GrammerPage","getSentences","toLocaleLowerCase","slice","split","answer","setAnswer","setIsAnsComplated","a","weight","Math","random","sort","b","setStockWords","setAnsWords","separateSentence","replace","shuffle","i","aw","sw","every","GrammerData","App","state","currentPage","theme","createMuiTheme","palette","main","colors","type","ThemeProvider","CssBaseline","WordGrammerPage","setState","changePage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7425487d.chunk.js","sourcesContent":["import React from 'react';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\n\n\ninterface GlobalMenuProps {\n  currentPage: string,\n  changeCurrentPage: (val:pageNames) => void\n}\n\nconst GlobalMenu:React.FC<GlobalMenuProps> = props => {\n\n  const style:React.CSSProperties = {\n    position:'fixed',\n    bottom:0,\n    width: '100%',\n  }\n\n  return (\n    <BottomNavigation\n      showLabels={true}\n      style={style}\n      onChange={(event, newValue:pageNames) => {\n        props.changeCurrentPage(newValue);\n      }}\n    >\n      <BottomNavigationAction showLabel={true} label='Word' value='WordPage' icon={<TextFormatIcon />} />\n      <BottomNavigationAction showLabel={true} label='Grammer1' value='WordGrammerPage'icon={<TextFieldsIcon />} />\n      <BottomNavigationAction showLabel={true} label='Grammer2' value='GrammerPage'icon={<TextFieldsIcon />} />\n    </BottomNavigation>\n  );\n}\n\nexport default GlobalMenu;","type sentenceType = {\n  part: string,\n  sentence: string,\n  sentenceTrans: string,\n}\n\nexport default class EnglishData {\n  static getFirstPart() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, [])[0];  \n  }\n\n  static getParts() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, []);  \n  }\n\n  static getSentences() {\n    return this.WORDS.reduce((val:sentenceType[], cur) => {\n      const w:sentenceType = {\n        part: cur.part,\n        sentence: cur.sentence, \n        sentenceTrans: cur.sentenceTrans\n      };\n\n      if (!val.some(v => \n        v.part === w.part && v.sentence === w.sentence)) {\n        val.push(w);\n      }\n      return val;\n    }, []);  \n  }\n\n  static readonly WORDS = \n    [{\"id\":\"1\",\"part\":\"lesson01-01\",\"word\":\"Britain\",\"partOfSpeech\":\"名詞\",\"trans\":\"イギリス\",\"sentence\":\"Do you know anything about narrow boats in Britain?\",\"sentenceTrans\":\"あなたはイギリスのナローボートについて何か知っていますか？\"},{\"id\":\"2\",\"part\":\"lesson01-01\",\"word\":\"British\",\"partOfSpeech\":\"形容詞\",\"trans\":\"イギリスの\",\"sentence\":\"They are boats you see in the British canals.\",\"sentenceTrans\":\"これらは イギリスの運河で見るボートです。\"},{\"id\":\"3\",\"part\":\"lesson01-01\",\"word\":\"canal\",\"partOfSpeech\":\"名詞\",\"trans\":\"運河\",\"sentence\":\"They are boats you see in the British canals.\",\"sentenceTrans\":\"これらは イギリスの運河で見るボートです。\"},{\"id\":\"4\",\"part\":\"lesson01-01\",\"word\":\"narrow\",\"partOfSpeech\":\"形容詞\",\"trans\":\"狭い\",\"sentence\":\"The boats are truly narrow; they are about two meters wide.\",\"sentenceTrans\":\"そのボートは ほんとに狭いです、それらは約２mの幅です。\"},{\"id\":\"5\",\"part\":\"lesson01-01\",\"word\":\"bedroom\",\"partOfSpeech\":\"名詞\",\"trans\":\"寝室\",\"sentence\":\"They are, however, long enough to have bedrooms, kitchens, and bathrooms in them.\",\"sentenceTrans\":\"これらはしかしながら、寝室やキッチンやお風呂を設置するのに十分です。\"},{\"id\":\"6\",\"part\":\"lesson01-01\",\"word\":\"camping car\",\"partOfSpeech\":\"名詞\",\"trans\":\"キャンピングカー\",\"sentence\":\"Narrow boats are like camping cars.\",\"sentenceTrans\":\"ナローボートは キャンピングカーのようなものです。\"},{\"id\":\"7\",\"part\":\"lesson01-01\",\"word\":\"people\",\"partOfSpeech\":\"名詞\",\"trans\":\"人々\",\"sentence\":\"People can live on them for weeks at a time.\",\"sentenceTrans\":\"人々は、一度に何週間もこれらの上で過ごすことができる。\"},{\"id\":\"8\",\"part\":\"lesson01-01\",\"word\":\"spend\",\"partOfSpeech\":\"動詞\",\"trans\":\"過ごす\",\"sentence\":\"These days, more and more people are spending their vacations on narrow boats.\",\"sentenceTrans\":\"最近、ますます休暇をナローボートで過ごす人が増えました。\"},{\"id\":\"9\",\"part\":\"lesson01-01\",\"word\":\"leisure\",\"partOfSpeech\":\"名詞\",\"trans\":\"余暇、休暇\",\"sentence\":\"Around 30,000 boats are registered for leisure use in the British canals.\",\"sentenceTrans\":\"イギリスの運河では、余暇用に訳３万席のボートが登録されている。\"},{\"id\":\"10\",\"part\":\"lesson01-01\",\"word\":\"narrow boat\",\"partOfSpeech\":\"名詞\",\"trans\":\"ナローボート（運河などで運行する船のこと）\",\"sentence\":\"This number is the highest in the history of narrow boats.\",\"sentenceTrans\":\"この数字は ナローボートの歴史の中で最も多いです。\"},{\"id\":\"11\",\"part\":\"lesson01-02\",\"word\":\"trace\",\"partOfSpeech\":\"名詞\",\"trans\":\"痕跡\",\"sentence\":\"We can trace the origin of the boats to the beginning of the Industrial Revolution.\",\"sentenceTrans\":\"ボートの起源が産業革命の始まりまで辿ることができます。\"},{\"id\":\"12\",\"part\":\"lesson01-02\",\"word\":\"Industical Revolution\",\"partOfSpeech\":\"名詞\",\"trans\":\"産業革命\",\"sentence\":\"We can trace the origin of the boats to the beginning of the Industrial Revolution.\",\"sentenceTrans\":\"ボートの起源が産業革命の始まりまで辿ることができます。\"},{\"id\":\"13\",\"part\":\"lesson01-02\",\"word\":\"mid-\",\"partOfSpeech\":\"形容詞\",\"trans\":\"半ば\",\"sentence\":\"In the mid-18th century, British people constructed many canals all over the island of Great Britain.\",\"sentenceTrans\":\"18世紀半ば、イギリス人はイギリスの島中に多くの運河を建設しました\"},{\"id\":\"14\",\"part\":\"lesson01-02\",\"word\":\"construct(ed)\",\"partOfSpeech\":\"動詞\",\"trans\":\"建設\",\"sentence\":\"In the mid-18th century, British people constructed many canals all over the island of Great Britain.\",\"sentenceTrans\":\"18世紀半ば、イギリス人はイギリスの島中に多くの運河を建設しました\"},{\"id\":\"15\",\"part\":\"lesson01-02\",\"word\":\"canals\",\"partOfSpeech\":\"名詞\",\"trans\":\"運河\",\"sentence\":\"The canals were narrow, and the boats had to be narrow, too.\",\"sentenceTrans\":\"運河は狭く、ボートも狭くなければなりませんでした。\"},{\"id\":\"16\",\"part\":\"lesson01-02\",\"word\":\"transport\",\"partOfSpeech\":\"前置詞\",\"trans\":\"〜の輸送\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\"},{\"id\":\"17\",\"part\":\"lesson01-02\",\"word\":\"coal\",\"partOfSpeech\":\"名詞\",\"trans\":\"石炭\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\"},{\"id\":\"18\",\"part\":\"lesson01-02\",\"word\":\"iron\",\"partOfSpeech\":\"名詞\",\"trans\":\"鉄\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\"},{\"id\":\"19\",\"part\":\"lesson01-02\",\"word\":\"drew\",\"partOfSpeech\":\"名詞\",\"trans\":\"鉄網\",\"sentence\":\"Horses and humans drew the boats along the banks because they did not have engines in those days.\",\"sentenceTrans\":\"当時はエンジンがなかったので、馬と人間が岸に沿ってボートを引きました。\"},{\"id\":\"20\",\"part\":\"lesson01-02\",\"word\":\"bank\",\"partOfSpeech\":\"動詞\",\"trans\":\"沿う\",\"sentence\":\"Horses and humans drew the boats along the banks because they did not have engines in those days.\",\"sentenceTrans\":\"当時はエンジンがなかったので、馬と人間が岸に沿ってボートを引きました。\"},{\"id\":\"21\",\"part\":\"lesson01-02\",\"word\":\"fashion\",\"partOfSpeech\":\"名詞\",\"trans\":\"時代\",\"sentence\":\"After railroads became common, narrow boats went out of fashion and were forgotte.\",\"sentenceTrans\":\"鉄道が一般的になった後、ナロウボートは時代遅れになり、忘れられました。\"},{\"id\":\"22\",\"part\":\"lesson01-02\",\"word\":\"remain\",\"partOfSpeech\":\"動詞\",\"trans\":\"思い出す\",\"sentence\":\"Only the canals remaind.\",\"sentenceTrans\":\"運河だけが思い出させます。\"},{\"id\":\"23\",\"part\":\"lesson01-03\",\"word\":\"popular\",\"partOfSpeech\":\"形容詞\",\"trans\":\"人気がある\",\"sentence\":\"Why are the boats so popular today?\",\"sentenceTrans\":\"なぜボートはそんなに人気があるのか\"},{\"id\":\"24\",\"part\":\"lesson01-03\",\"word\":\"access\",\"partOfSpeech\":\"動詞\",\"trans\":\"アクセス\",\"sentence\":\"First, as there are canals all over Britain, narrow boats can be easily accessed.\",\"sentenceTrans\":\"まず最初に、イギリス全土に運河があるので、ナロウボートに簡単にアクセスできます。\"},{\"id\":\"25\",\"part\":\"lesson01-03\",\"word\":\"rush\",\"partOfSpeech\":\"動詞\",\"trans\":\"急ぐ\",\"sentence\":\"People do not have to travel far or rush to an airport to start their vacations.\",\"sentenceTrans\":\"人々は休暇を始めるのに、遠くに旅行したり空港に急いだりする必要はありません。\"},{\"id\":\"26\",\"part\":\"lesson01-03\",\"word\":\"east to steer\",\"partOfSpeech\":\"\",\"trans\":\"操縦しやすい\",\"sentence\":\"Second, the boats are safe and easy to steer.\",\"sentenceTrans\":\"第二に、ボートは操縦しやすく安全です。\"},{\"id\":\"27\",\"part\":\"lesson01-03\",\"word\":\"approximately\",\"partOfSpeech\":\"形容詞\",\"trans\":\"およそ\",\"sentence\":\"Even though they hae engines now, they cruise just a little faster than walking speed approximately six kilometers an hour.\",\"sentenceTrans\":\"彼らは現在エンジンを持っていますが、時速およそ６キロの歩行速度よりも少し早く巡航します\"},{\"id\":\"28\",\"part\":\"lesson01-03\",\"word\":\"require\",\"partOfSpeech\":\"動詞\",\"trans\":\"必要とする\",\"sentence\":\"So no license is required.\",\"sentenceTrans\":\"したがって、ライセンスは必要ないです。\"},{\"id\":\"29\",\"part\":\"lesson01-03\",\"word\":\"pace\",\"partOfSpeech\":\"名詞\",\"trans\":\"ペース\",\"sentence\":\"Finally, the slow pace makes the voyage fun.\",\"sentenceTrans\":\"最後に、ゆっくりなペースは航海の楽しさを作ります\"},{\"id\":\"30\",\"part\":\"lesson01-03\",\"word\":\"voyage\",\"partOfSpeech\":\"名詞\",\"trans\":\"航海\",\"sentence\":\"Finally, the slow pace makes the voyage fun.\",\"sentenceTrans\":\"最後に、ゆっくりなペースは航海の楽しさを作ります\"},{\"id\":\"31\",\"part\":\"lesson01-03\",\"word\":\"onboard\",\"partOfSpeech\":\"形容詞\",\"trans\":\"機内の\",\"sentence\":\"People onboard enjoy saying hello to other boaters when they pass each other.\",\"sentenceTrans\":\"船内の人々は、すれ違う際に他の乗客に挨拶をするのを楽しんでいます\"},{\"id\":\"32\",\"part\":\"lesson01-03\",\"word\":\"boater\",\"partOfSpeech\":\"名詞\",\"trans\":\"船の乗客\",\"sentence\":\"People onboard enjoy saying hello to other boaters when they pass each other.\",\"sentenceTrans\":\"船内の人々は、すれ違う際に他の乗客に挨拶をするのを楽しんでいます\"},{\"id\":\"33\",\"part\":\"lesson01-03\",\"word\":\"in a hurry\",\"partOfSpeech\":\"\",\"trans\":\"急いで\",\"sentence\":\"Since most of the canals are for leisure use, nobody is in a hurry.\",\"sentenceTrans\":\"ほとんどの運河は休暇用なので、誰も急いでません。\"},{\"id\":\"34\",\"part\":\"lesson01-03\",\"word\":\"boating\",\"partOfSpeech\":\"名詞\",\"trans\":\"ボート遊び\",\"sentence\":\"Boating on the canals is enjoyable and relaxing.\",\"sentenceTrans\":\"運河でのボート遊びは楽しくリラックスできます。\"},{\"id\":\"35\",\"part\":\"lesson01-04\",\"word\":\"themselves\",\"partOfSpeech\":\"代名詞\",\"trans\":\"自分自身\",\"sentence\":\"In this way, British people can refresh themselves and forget about their busy life.\",\"sentenceTrans\":\"このようにして、英国の人々は自分自身をリフレッシュし、忙しい生活を忘れることができます。\"},{\"id\":\"36\",\"part\":\"lesson01-04\",\"word\":\"peaceful\",\"partOfSpeech\":\"形容詞\",\"trans\":\"平和な\",\"sentence\":\"What used to carry iron and steel now provides a slow, peaceful experience.\",\"sentenceTrans\":\"かつて鉄網を運んでいたものが、今ではゆっくりと平和な体験を提供しています。\"},{\"id\":\"37\",\"part\":\"Unit01-01\",\"word\":\"memory\",\"partOfSpeech\":\"名詞\",\"trans\":\"記憶\",\"sentence\":\"Everyone wants to keep happy memories forever.\",\"sentenceTrans\":\"誰もが幸せな記憶を永遠に保っておきたいです。\"},{\"id\":\"38\",\"part\":\"Unit01-01\",\"word\":\"natural\",\"partOfSpeech\":\"形容詞\",\"trans\":\"自然\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\"},{\"id\":\"39\",\"part\":\"Unit01-01\",\"word\":\"capture\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を捕らえる\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\"},{\"id\":\"40\",\"part\":\"Unit01-01\",\"word\":\"moment\",\"partOfSpeech\":\"名詞\",\"trans\":\"瞬間\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\"},{\"id\":\"41\",\"part\":\"Unit01-01\",\"word\":\"take photos\",\"partOfSpeech\":\"\",\"trans\":\"写真を撮る\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"42\",\"part\":\"Unit01-01\",\"word\":\"however\",\"partOfSpeech\":\"副詞\",\"trans\":\"しかしながら\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"43\",\"part\":\"Unit01-01\",\"word\":\"recent\",\"partOfSpeech\":\"形容詞\",\"trans\":\"最近の\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"44\",\"part\":\"Unit01-01\",\"word\":\"actually\",\"partOfSpeech\":\"副詞\",\"trans\":\"実際は\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"45\",\"part\":\"Unit01-01\",\"word\":\"damage\",\"partOfSpeech\":\"他動詞\",\"trans\":\"に損害を与える\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"46\",\"part\":\"Unit01-01\",\"word\":\"ability\",\"partOfSpeech\":\"名詞\",\"trans\":\"能力\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\"},{\"id\":\"47\",\"part\":\"Unit01-02\",\"word\":\"experiment\",\"partOfSpeech\":\"名詞\",\"trans\":\"実験\",\"sentence\":\"In one experiment,\",\"sentenceTrans\":\"\"},{\"id\":\"48\",\"part\":\"Unit01-02\",\"word\":\"university\",\"partOfSpeech\":\"名詞\",\"trans\":\"大学\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\"},{\"id\":\"49\",\"part\":\"Unit01-02\",\"word\":\"invite\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を招待する\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\"},{\"id\":\"50\",\"part\":\"Unit01-02\",\"word\":\"museum\",\"partOfSpeech\":\"名詞\",\"trans\":\"博物館\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\"},{\"id\":\"51\",\"part\":\"Unit01-02\",\"word\":\"object\",\"partOfSpeech\":\"名詞\",\"trans\":\"物\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\"},{\"id\":\"52\",\"part\":\"Unit01-02\",\"word\":\"display\",\"partOfSpeech\":\"名詞\",\"trans\":\"画面\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\"},{\"id\":\"53\",\"part\":\"Unit01-02\",\"word\":\"allow - to do\",\"partOfSpeech\":\"\",\"trans\":\"- が --することを許す。\",\"sentence\":\"One group was allowed to take pictures while they looked around the museum, and the other group was asked to go without cameras.\",\"sentenceTrans\":\"一つのグループは美術館を見回しながら写真を撮ることを許可され、もう一方のグループはカメラを撮ることを許可しないように頼みました\"},{\"id\":\"54\",\"part\":\"Unit01-02\",\"word\":\"without\",\"partOfSpeech\":\"前置詞\",\"trans\":\"なしで\",\"sentence\":\"One group was allowed to take pictures while they looked around the museum, and the other group was asked to go without cameras.\",\"sentenceTrans\":\"一つのグループは美術館を見回しながら写真を撮ることを許可され、もう一方のグループはカメラを撮ることを許可しないように頼みました\"},{\"id\":\"55\",\"part\":\"Unit01-03\",\"word\":\"result\",\"partOfSpeech\":\"名詞\",\"trans\":\"結果\",\"sentence\":\"The results showed that the students who had taken photos did not remember as well as the students who had observed the objects only with their eyes.\",\"sentenceTrans\":\"その結果、写真を撮った生徒は、目だけで物を観察した生徒と同様に、覚えていないことがわかりました。\"},{\"id\":\"56\",\"part\":\"Unit01-03\",\"word\":\"observe\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を観察する\",\"sentence\":\"The results showed that the students who had taken photos did not remember as well as the students who had observed the objects only with their eyes.\",\"sentenceTrans\":\"その結果、写真を撮った生徒は、目だけで物を観察した生徒と同様に、覚えていないことがわかりました。\"},{\"id\":\"57\",\"part\":\"Unit01-03\",\"word\":\"furthermore\",\"partOfSpeech\":\"副詞\",\"trans\":\"さらに\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったものよりもカメラを使う物体の詳細についてあまり覚えていなかった。\"},{\"id\":\"58\",\"part\":\"Unit01-03\",\"word\":\"detail\",\"partOfSpeech\":\"名詞\",\"trans\":\"細部\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったものよりもカメラを使う物体の詳細についてあまり覚えていなかった。\"},{\"id\":\"59\",\"part\":\"Unit01-03\",\"word\":\"photograph\",\"partOfSpeech\":\"他動詞\",\"trans\":\"写真を撮る\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったグループよりもカメラを使ったグループの方が詳細についてあまり覚えていなかった。\"},{\"id\":\"60\",\"part\":\"Unit01-03\",\"word\":\"researcher\",\"partOfSpeech\":\"名詞\",\"trans\":\"研究者、調査者\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\"},{\"id\":\"61\",\"part\":\"Unit01-03\",\"word\":\"this is because -\",\"partOfSpeech\":\"\",\"trans\":\"これは - だからだ\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\"},{\"id\":\"62\",\"part\":\"Unit01-03\",\"word\":\"rely on\",\"partOfSpeech\":\"\",\"trans\":\"に頼る\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\"},{\"id\":\"63\",\"part\":\"Unit01-03\",\"word\":\"as a result\",\"partOfSpeech\":\"\",\"trans\":\"その結果\",\"sentence\":\"As a result, they end up remembering less.\",\"sentenceTrans\":\"その結果、彼らは少ししか覚えていないことになります。\"},{\"id\":\"64\",\"part\":\"Unit01-03\",\"word\":\"end up doing\",\"partOfSpeech\":\"\",\"trans\":\"結局 〜することになる\",\"sentence\":\"As a result, they end up remembering less.\",\"sentenceTrans\":\"その結果、彼らは少ししか覚えていないことになります。\"},{\"id\":\"65\",\"part\":\"Unit01-04\",\"word\":\"almost\",\"partOfSpeech\":\"副詞\",\"trans\":\"ほとんど\",\"sentence\":\"People have happy moments to remember almost every day,\",\"sentenceTrans\":\"人々はほぼ毎日覚えて幸せな瞬間を持っています。\"},{\"id\":\"66\",\"part\":\"Unit01-04\",\"word\":\"everwhere\",\"partOfSpeech\":\"副詞\",\"trans\":\"どこでも\",\"sentence\":\"everywhere:\",\"sentenceTrans\":\"どこでも\"},{\"id\":\"67\",\"part\":\"Unit01-04\",\"word\":\"close\",\"partOfSpeech\":\"形容詞\",\"trans\":\"近い\",\"sentence\":\"having a nice dinner with close friends;\",\"sentenceTrans\":\"親友をいいディナーをすること\"},{\"id\":\"68\",\"part\":\"Unit01-04\",\"word\":\"discover\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を発見する\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\"},{\"id\":\"69\",\"part\":\"Unit01-04\",\"word\":\"blossom\",\"partOfSpeech\":\"名詞\",\"trans\":\"花\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\"},{\"id\":\"70\",\"part\":\"Unit01-04\",\"word\":\"on the way to\",\"partOfSpeech\":\"\",\"trans\":\"へ行く途中に\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\"},{\"id\":\"71\",\"part\":\"Unit01-04\",\"word\":\"celebrate\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を祝う\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\"},{\"id\":\"72\",\"part\":\"Unit01-04\",\"word\":\"in any case\",\"partOfSpeech\":\"\",\"trans\":\"どの場合でも\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\"},{\"id\":\"73\",\"part\":\"Unit01-04\",\"word\":\"really\",\"partOfSpeech\":\"副詞\",\"trans\":\"本当\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\"},{\"id\":\"74\",\"part\":\"Unit01-04\",\"word\":\"for a long time\",\"partOfSpeech\":\"\",\"trans\":\"長い間\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\"},{\"id\":\"75\",\"part\":\"Unit01-04\",\"word\":\"put away\",\"partOfSpeech\":\"\",\"trans\":\"をしまう\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\"},{\"id\":\"76\",\"part\":\"Unit01-04\",\"word\":\"own\",\"partOfSpeech\":\"形容詞\",\"trans\":\"自身の\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\"}];\n}\n\n","class EnglishVoice {\n  static speech(text:string, lang: string, rate: number) {\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices().filter(voice => voice.lang === lang);\n    const voice = voices[0];\n    const utter = new SpeechSynthesisUtterance();\n    utter.text = text;\n    utter.lang = lang;\n    utter.voice = voice;\n    utter.rate = rate;\n    window.speechSynthesis.speak(utter);\n  }\n}\n\nexport default EnglishVoice;","import * as React from 'react';\nimport { Container, Button, Grid, Typography, TextField, Avatar } from '@material-ui/core';\nimport EnglishVoice from '../../lib/EnglishVoice';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport 'fontsource-roboto';\n\ninterface WordProps {\n    word: string;\n    partOfSpeech: string;\n    trans: string;\n    visibleWord: string;\n    isInputWordCompleted: boolean;\n    inputWordString:string;\n    onClick: () => void;\n    changeInputWordCompleted: (val:boolean) => void;\n    changeInputWord: (val:string) => void;    \n}\n\nclass Word extends React.Component<WordProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n    \n    const partOfSpeech = this.props.partOfSpeech.length ? this.props.partOfSpeech : '';\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <Grid container>\n            <Grid item xs={10}>\n              <Typography variant='subtitle1'>\n                {this.props.trans}\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Avatar\n                variant='circular'\n                component='span'\n              >\n                {partOfSpeech.substr(0,1)}\n              </Avatar>\n            </Grid>\n          </Grid>\n          <Typography variant='h4' className={this.props.visibleWord}>\n            {this.props.word}\n          </Typography>\n          <br/>\n          <Grid container direction=\"row\">\n            <TextField\n              error={!this.props.isInputWordCompleted}\n              label= {this.props.isInputWordCompleted ? \"OK\" : \"input word\"}\n              fullWidth={true}\n              value={this.props.inputWordString}\n              variant=\"outlined\"\n              onChange={(o) => \n                {\n                  this.props.changeInputWord(o.target.value.toLowerCase());\n                  if (this.props.word.toLowerCase() === o.target.value.toLowerCase()) {\n                    this.props.changeInputWordCompleted(true);\n                    this.props.onClick();\n                    EnglishVoice.speech('OK. '+this.props.word, 'en-US', 1);\n                  } else {\n                    this.props.changeInputWordCompleted(false);\n                  }\n                }\n              }\n            />\n          </Grid>\n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={() => this.props.onClick()}\n                >\n                  <TranslateIcon/>\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                onClick={() => {\n                  EnglishVoice.speech(this.props.word, 'en-US', 1);\n                }}\n              >\n                <VolumeUpIcon/>\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Word;","import * as React from 'react';\nimport { Container, Button, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport EnglishVoice from '../../lib/EnglishVoice';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport 'fontsource-roboto';\n\n\ninterface SentenceProps {\n    sentence: string;\n    trans: string;\n    visibleSentence: string;\n    speechSpeedRate: number;\n    onClick: () => void;\n}\n\nclass Sentence extends React.Component<SentenceProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <div onClick={() => this.props.onClick()}>\n            <p className=\"word\">{this.props.trans}</p>\n          </div>\n          <Typography component=\"div\">\n            <Box\n              className={this.props.visibleSentence}\n              m={1}\n            >\n              {this.props.sentence}\n            </Box>\n          </Typography>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => this.props.onClick()}\n              >\n                <TranslateIcon\n                  fontSize='small'\n                />\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                onClick={() => {\n                  EnglishVoice.speech(this.props.sentence, 'en-US', this.props.speechSpeedRate);\n                }}\n              >\n                <VolumeUpIcon\n                  fontSize='small'\n                />\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Sentence;","import * as React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport 'fontsource-roboto';\n\nconst Pagination: React.FC<{onClickPrev: () => void, onClickNext: () => void}> = ({onClickPrev, onClickNext}) => {\n  return (\n    <Grid\n    container\n    direction=\"row\"\n    justify=\"space-around\"\n    alignItems=\"flex-end\"\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => onClickPrev()}\n      >\n        Prev\n      </Button> \n      <Button \n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => onClickNext()}\n      >\n        Next\n      </Button>\n    </Grid>\n  );\n}\n\nexport default Pagination;","import * as React from 'react';\nimport { Grid, Typography, Box } from '@material-ui/core';\n\nconst Part: React.FC<{currentPart: string}> = ({currentPart}) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-around\"\n      alignItems=\"flex-end\"\n    >\n        <Typography component=\"div\">\n          <Box\n            fontSize=\"h6.fontSize\" m={1}\n          >\n            {currentPart}\n          </Box>\n        </Typography>        \n    </Grid>\n  );\n}\n\nexport default Part;","import React, { useState } from 'react';\nimport { Drawer, IconButton, List, ListItem, Slider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { ListItemText, ListItemIcon } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\n\ninterface SideMenuProps {\n  parts: string[];\n  currentPart: string;\n  changeCurrentPart: (val:string) => void;\n  speechSpeedRate: number;\n  changeSpeechSpeedRate: (val:number) => void;\n}\n\nconst SideMenu: React.FC<SideMenuProps> = props => {\n  const [menuToggle, setMenuToggle] = useState(false);\n\n  const toggleDrawer = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const parts = props.parts;\n\n  const useStyles = makeStyles({\n    list: {\n      width: '50vw',\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"end\"\n        onClick={() => toggleDrawer()}\n      />\n      <Drawer\n        anchor='right'\n        open={menuToggle}\n        onClose={() => setMenuToggle(false)}\n      >\n        <div className={classes.list}>\n          <CloseIcon\n            onClick={() => setMenuToggle(false)}\n          />\n          <List component=\"nav\" aria-label=\"secondary part\">\n            {\n              parts.map(p => {\n                return (\n                  <ListItem \n                    button\n                    onClick={() => {\n                      props.changeCurrentPart(p);\n                      setMenuToggle(false);\n                    }}\n                    key={p}\n                  >\n                    <ListItemText primary={p}/>\n                    <ListItemIcon>\n                      {\n                        p === props.currentPart\n                        &&\n                        <CheckIcon />\n                      }\n                    </ListItemIcon>\n                  </ListItem>\n                )\n              })\n            }\n          </List>\n          <Divider />\n          <List component=\"nav\" aria-label=\"thirdry speechSpeed\">\n            <ListItem>\n              <Slider\n                min={0.1}\n                max={1}\n                step={0.1}\n                value={props.speechSpeedRate}\n                aria-labelledby=\"speech-speed-rate\"\n                valueLabelDisplay=\"auto\"\n                onChange={(e, v) => {\n                  let rate:number = props.speechSpeedRate;\n                  if (typeof(v) ===  'number') {\n                    rate = v;\n                  }\n                  props.changeSpeechSpeedRate(rate);\n                }}\n              />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <MenuIcon />\n    </>\n  );\n}\n\nexport default SideMenu;","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport EnglishData from '../context/EnglishData';\nimport Word from '../components/WordPage/Word';\nimport Sentence from '../components/WordPage/Sentence';\nimport Paginate from '../components/Pagination';\nimport Part from '../components/Part';\nimport SideMenu from '../components/SideMenu';\n\nconst WordPage: React.FC<{}> = () => {\n    const [slides, setSlides] = useState(EnglishData.WORDS.filter(w => w.part === EnglishData.getFirstPart()));\n    const [wordIndex, setWordIndex] = useState<number>(0);\n    const [visibleWord, setVisibleWord] = useState<string>('word-hidden');\n    const [currentPart, setCurrentPart] = useState<string>(EnglishData.getFirstPart());\n    const [visibleSentence, setVisibleSentence] = useState<string>('word-hidden');\n    const [isInputWordCompleted, setIsInputWordCompleted] = useState<boolean>(false);\n    const [inputWordString, setInputWordString] = useState<string>('');\n    const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n\n    const slidePrev = () => {\n      if (wordIndex > 0) {\n        setWordIndex(wordIndex - 1);\n        setVisibleWord('word-hidden');\n        setVisibleSentence('word-hidden');\n        setIsInputWordCompleted(false);\n        setInputWordString('');\n      }\n    }\n  \n    const slideNext = () => {\n      if (wordIndex < slides.length-1) {\n        setWordIndex(wordIndex + 1);\n        setVisibleWord('word-hidden');\n        setVisibleSentence('word-hidden');\n        setIsInputWordCompleted(false);\n        setInputWordString('');\n      }\n    }\n\n    const changeInputWordCompleted = (val: boolean) => {\n      setIsInputWordCompleted(val);\n    }\n\n    const changeInputWord = (val: string) => {\n      setInputWordString(val);\n    }\n\n    const changeCurrentPart = (val: string) => {\n      if (currentPart !== val) {\n        const s = EnglishData.WORDS.filter(w => w.part === val);\n          setSlides(s)\n          setCurrentPart(val);\n          setWordIndex(0);\n          setVisibleWord('word-hidden');\n          setVisibleSentence('word-hidden');\n          setIsInputWordCompleted(false);\n          setInputWordString('');\n        }\n    }\n\n    const changeSpeechSpeedRate = (val: number) => {\n      setSpeechSpeedRate(val);\n    }\n\n    return (\n      <>\n        <SideMenu\n          parts={EnglishData.getParts()}\n          currentPart={currentPart}\n          changeCurrentPart={(val) => changeCurrentPart(val)}\n          speechSpeedRate={speechSpeedRate}\n          changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n        />\n        <Container maxWidth=\"sm\">\n          <Paginate\n            onClickPrev={slidePrev}\n            onClickNext={slideNext}\n          />\n          <hr/>\n          <Word\n            word={slides[wordIndex].word}\n            partOfSpeech={slides[wordIndex].partOfSpeech}\n            trans={slides[wordIndex].trans}\n            visibleWord = {visibleWord}\n            isInputWordCompleted={isInputWordCompleted}\n            inputWordString={inputWordString}\n            onClick={() => setVisibleWord('word-visible')}\n            changeInputWordCompleted={(val) => changeInputWordCompleted(val)}\n            changeInputWord={(val) => changeInputWord(val)}\n          />\n          <hr/>\n          <Sentence\n            sentence={slides[wordIndex].sentence}\n            trans={slides[wordIndex].sentenceTrans}\n            visibleSentence={visibleSentence}\n            speechSpeedRate={speechSpeedRate}\n            onClick = {() => setVisibleSentence('word-visible')}\n          />\n          <hr/>\n          <Part\n            currentPart={currentPart}\n          />\n        </Container>\n      </>        \n    )\n} \n\nexport default WordPage;","import React from 'react';\nimport { Container, Button, Grid, Typography } from '@material-ui/core';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport EnglishVoice from '../../lib/EnglishVoice';\n\ninterface GrammerProps {\n  answer: string[];\n  stockWords: string[];\n  ansWords: string[];\n  sentence: string;\n  translate: string;\n  isAnsComplated: boolean;\n  moveAnsWords: (w:string, i:number) => void;\n  moveStockWords: (w:string, i:number) => void;\n}\n\nconst Grammer: React.FC<GrammerProps> = props => {\n  const stockWords = props.stockWords;\n  const ansWords = props.ansWords;\n  const lastChar:string = props.sentence.substr(-1);\n\n  const buttonStyle: React.CSSProperties = {\n    display: 'inline-block',\n    minWidth: '20px',\n    height: '40px',\n    textTransform: 'lowercase',\n    margin: '5px',\n  }\n\n  const wordsStyle: React.CSSProperties = {\n    height: '30vh',\n  }\n\n  const style: React.CSSProperties = {\n    display: 'inline-block',\n    width: '100%',\n    height: '20%',\n  }\n\n\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Grid container>\n          <Typography variant='subtitle1'>\n            {props.translate}\n          </Typography>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            ansWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color={props.isAnsComplated ? 'default' : 'secondary'}\n                  variant={props.isAnsComplated ? 'outlined' : 'contained'}\n                  size=\"small\"\n                  onClick={() => props.moveStockWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n          <Button\n            style={buttonStyle}\n            color=\"default\"\n            variant=\"text\"\n            size=\"small\"\n            key=\"lastChar\"\n          >\n            {lastChar}\n          </Button>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            stockWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => props.moveAnsWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n        </Grid>\n      </Container>\n      <hr />\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          <Button\n            style={style}\n            variant=\"outlined\"\n            onClick={() => {\n              EnglishVoice.speech(props.sentence, 'en-US', 1);\n            }}\n          >\n            <VolumeUpIcon\n              fontSize='small'\n            />\n          </Button>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Grammer;","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Paginate from '../components/Pagination';\nimport Grammer from '../components/WordGrammerPage/Grammer';\nimport SideMenu from '../components/SideMenu';\nimport EnglishData from '../context/EnglishData';\nimport EnglishVoice from '../lib/EnglishVoice';\n\nconst GrammerPage:React.FC = () => {\n  const [slides, setSlides] = useState(EnglishData.getSentences().filter(w => w.part === EnglishData.getFirstPart()));\n  const [wordIndex, setWordIndex] = useState<number>(0);\n  const [currentPart, setCurrentPart] = useState<string>(EnglishData.getFirstPart());\n  const [answer, setAnswer] = useState<string[]>(slides[wordIndex].sentence.toLocaleLowerCase().slice(0, -1).split(' '));\n  const [isAnsComplated, setIsAnsComplated] = useState<boolean>(false);\n  const [stockWords, setStockWords] = useState<string[]>(\n    answer\n      .map(function (a) { return { weight: Math.random(), value: a } })\n      .sort(function (a, b) { return a.weight - b.weight })\n      .map(function (a) { return a.value })\n  );\n  const [ansWords, setAnsWords] = useState<string[]>([]);\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      const i:number = wordIndex - 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      const i:number = wordIndex + 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeCurrentPart = (val: string) => {\n    if (currentPart !== val) {\n      const s = EnglishData.getSentences().filter(w => w.part === val);\n      setSlides(s)\n      setCurrentPart(val);\n      setWordIndex(0);\n\n      const a:string[] = separateSentence(s[0].sentence);\n      setAnswer(a);\n      setStockWords(shuffle(a));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const moveAnsWords = (word: string, index: number) => {\n    const aw = ansWords;\n    const sw = stockWords.filter((v, i) => {\n      return i !== index;\n    });\n    aw.push(word);\n\n    setAnsWords(aw);\n    setStockWords(sw);\n\n    EnglishVoice.speech(word, 'en-US', 1);\n    if (answer.every((a, index) => a === aw[index])) {\n      setIsAnsComplated(true);\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    } else {\n      setIsAnsComplated(false);\n    }\n  }\n\n  const moveStockWords = (word: string, index: number) => {\n    const sw = stockWords;\n    const aw = ansWords.filter((v, i) => {\n      return i !== index;\n    });\n    sw.push(word);\n\n    setStockWords(sw);\n    setAnsWords(aw);\n    setIsAnsComplated(false);\n  }\n\n  const separateSentence = (s:string) => {\n    return s.toLocaleLowerCase().replace('.', '').split(' ');\n  }\n\n  const shuffle = (w:string[]) => {\n    return w.map(function (a) { return { weight: Math.random(), value: a } })\n    .sort(function (a, b) { return a.weight - b.weight })\n    .map(function (a) { return a.value })\n  }\n\n  return (\n    <>\n      <SideMenu\n        parts={EnglishData.getParts()}\n        currentPart={currentPart}\n        changeCurrentPart={(val) => changeCurrentPart(val)}\n        speechSpeedRate={speechSpeedRate}\n        changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n      />\n      <Container>\n        <Paginate\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        <Grammer\n          answer={answer}\n          stockWords={stockWords}\n          ansWords={ansWords}\n          sentence={slides[wordIndex].sentence}\n          translate={slides[wordIndex].sentenceTrans}\n          isAnsComplated={isAnsComplated}\n          moveAnsWords={(w, i) => moveAnsWords(w, i)}\n          moveStockWords={(w, i) => moveStockWords(w, i)}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default GrammerPage;","import React, { useState } from 'react';\nimport { Container, Button, Grid, Typography } from '@material-ui/core';\n\ninterface GrammerProps {\n  answer: string[];\n  stockWords: string[];\n  ansWords: string[];\n  sentence: string;\n  translate: string;\n  isAnsComplated: boolean;\n  moveAnsWords: (w:string, i:number) => void;\n  moveStockWords: (w:string, i:number) => void;\n}\n\nconst Grammer: React.FC<GrammerProps> = props => {\n  const stockWords = props.stockWords;\n  const ansWords = props.ansWords;\n\n  const buttonStyle: React.CSSProperties = {\n    display: 'inline-block',\n    minWidth: '20px',\n    height: '40px',\n    textTransform: 'lowercase',\n    margin: '5px',\n  }\n\n  const wordsStyle: React.CSSProperties = {\n    height: '30vh',\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Grid container>\n          <Typography variant='subtitle1'>\n            {props.translate}\n          </Typography>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            ansWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color=\"secondary\"\n                  variant={props.isAnsComplated ? 'text' : 'contained'}\n                  size=\"small\"\n                  onClick={() => props.moveStockWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            stockWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => props.moveAnsWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Grammer;","type sentenceType = {\n  part: string,\n  sentence: string,\n  sentenceTrans: string,\n}\n\nexport default class GrammerData {\n  static getFirstPart() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, [])[0];  \n  }\n\n  static getParts() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, []);  \n  }\n\n  static getSentences() {\n    return this.WORDS.reduce((val:sentenceType[], cur) => {\n      const w:sentenceType = {\n        part: cur.part,\n        sentence: cur.sentence, \n        sentenceTrans: cur.sentenceTrans\n      };\n\n      if (!val.some(v => \n        v.part === w.part && v.sentence === w.sentence)) {\n        val.push(w);\n      }\n      return val;\n    }, []);  \n  }\n\n  static readonly WORDS = \n  [{\"id\":\"1\",\"part\":\"blue chart001\",\"sentence\":\"Bill  is  a  high school  student .\",\"sentenceTrans\":\"ビルは高校生です\"},{\"id\":\"2\",\"part\":\"blue chart001\",\"sentence\":\"Bill  is  not  a  high school  student.\",\"sentenceTrans\":\"ビルは高校生ではありません。\"},{\"id\":\"3\",\"part\":\"blue chart001\",\"sentence\":\"My  mother  can  drive  a  car.\",\"sentenceTrans\":\"母は車の運転ができます。\"},{\"id\":\"4\",\"part\":\"blue chart001\",\"sentence\":\"My  mother  cannot  drive  a  car.\",\"sentenceTrans\":\"母は車の運転ができない\"},{\"id\":\"5\",\"part\":\"blue chart001\",\"sentence\":\"My  mother  can't  drive  a  car.\",\"sentenceTrans\":\"母は車の運転ができない。\"},{\"id\":\"6\",\"part\":\"blue chart001\",\"sentence\":\"I  know  her  address.\",\"sentenceTrans\":\"私は彼女の住所を知っています。\"},{\"id\":\"7\",\"part\":\"blue chart001\",\"sentence\":\"I  do  not  know  her  address.\",\"sentenceTrans\":\"私は彼女の住所を知りません。\"},{\"id\":\"8\",\"part\":\"blue chart001\",\"sentence\":\"I  don't  know  her  address.\",\"sentenceTrans\":\"私は彼女の住所を知りません。\"}];\n} ","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Paginate from '../components/Pagination';\nimport Grammer from '../components/GrammerPage/Grammer';\nimport SideMenu from '../components/SideMenu';\nimport GrammerData from '../context/GrammerData';\nimport EnglishVoice from '../lib/EnglishVoice';\n\n\nconst GrammerPage:React.FC = () => {\n  const [slides, setSlides] = useState(GrammerData.getSentences().filter(w => w.part === GrammerData.getFirstPart()));\n  const [wordIndex, setWordIndex] = useState<number>(0);\n  const [currentPart, setCurrentPart] = useState<string>(GrammerData.getFirstPart());\n  const [answer, setAnswer] = useState<string[]>(slides[wordIndex].sentence.toLocaleLowerCase().replace('.', '').split('  '));\n  const [stockWords, setStockWords] = useState<string[]>(\n    answer\n      .map(function (a) { return { weight: Math.random(), value: a } })\n      .sort(function (a, b) { return a.weight - b.weight })\n      .map(function (a) { return a.value })\n  );\n  const [ansWords, setAnsWords] = useState<string[]>([]);\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      const i:number = wordIndex - 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n    }\n  }\n\n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      const i:number = wordIndex + 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n    }\n  }\n\n  const changeCurrentPart = (val: string) => {\n    if (currentPart !== val) {\n      const s = GrammerData.getSentences().filter(w => w.part === val);\n      setSlides(s)\n      setCurrentPart(val);\n      setWordIndex(0);\n\n      const a:string[] = separateSentence(s[0].sentence);\n      setAnswer(a);\n      setStockWords(shuffle(a));\n      setAnsWords([]);\n    }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const moveAnsWords = (word: string, index: number) => {\n    const aw = ansWords;\n    const sw = stockWords.filter((v, i) => {\n      return i !== index;\n    });\n    aw.push(word);\n\n    setAnsWords(aw);\n    setStockWords(sw);\n\n    EnglishVoice.speech(word, 'en-US', 1);\n    if (answer.every((a, index) => a === aw[index])) {\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    }\n  }\n\n  const moveStockWords = (word: string, index: number) => {\n    const sw = stockWords;\n    const aw = ansWords.filter((v, i) => {\n      return i !== index;\n    });\n    sw.push(word);\n\n    setStockWords(sw);\n    setAnsWords(aw);\n  }\n\n  const separateSentence = (s:string) => {\n    return s.toLocaleLowerCase().replace('.', '').split('  ');\n  }\n\n  const shuffle = (w:string[]) => {\n    return w.map(function (a) { return { weight: Math.random(), value: a } })\n    .sort(function (a, b) { return a.weight - b.weight })\n    .map(function (a) { return a.value })\n  }\n\n  return (\n    <>\n      <SideMenu\n        parts={GrammerData.getParts()}\n        currentPart={currentPart}\n        changeCurrentPart={(val) => changeCurrentPart(val)}\n        speechSpeedRate={speechSpeedRate}\n        changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n      />\n      <Container>\n        <Paginate\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        <Grammer\n          answer={answer}\n          stockWords={stockWords}\n          ansWords={ansWords}\n          sentence={slides[wordIndex].sentence}\n          translate={slides[wordIndex].sentenceTrans}\n          isAnsComplated={false}\n          moveAnsWords={(w, i) => moveAnsWords(w, i)}\n          moveStockWords={(w, i) => moveStockWords(w, i)}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default GrammerPage;","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport 'fontsource-roboto';\nimport GlobalMenu from './components/GlobalMenu';\nimport WordPage from './pages/WordPage';\nimport WordGrammerPage from './pages/WordGrammerPage';\nimport GrammerPage from './pages/GrammerPage';\n\ninterface AppProps {\n}\n\ninterface AppState {\n  currentPage: pageNames\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    \n    this.state = {\n      currentPage: 'WordPage'\n    }\n  }\n\n  render () {\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: colors.blue[800],\n        },\n        type: 'dark',\n      },\n    });\n\n    const changePage = (val: pageNames) => {\n      this.setState({\n        currentPage: val\n      })\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {\n          this.state.currentPage === 'WordPage'\n          &&\n          <WordPage />\n        }\n        {\n          this.state.currentPage === 'WordGrammerPage'\n          &&\n          <WordGrammerPage />\n        }\n        {\n          this.state.currentPage === 'GrammerPage'\n          &&\n          <GrammerPage />\n        }\n        <GlobalMenu\n            currentPage={this.state.currentPage}\n            changeCurrentPage= {(val) => changePage(val)}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}