{"version":3,"sources":["components/GlobalMenu.tsx","context/EnglishData.ts","lib/EnglishVoice.ts","components/WordPage/Word.tsx","components/WordPage/Sentence.tsx","components/Pagination.tsx","components/Part.tsx","components/SideMenu.tsx","pages/WordPage.tsx","components/WordGrammerPage/Grammer.tsx","pages/WordGrammerPage.tsx","components/GrammerPage/Grammer.tsx","context/GrammerData.ts","pages/GrammerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalMenu","props","BottomNavigation","showLabels","style","position","bottom","width","onChange","event","newValue","changeCurrentPage","sessionStorage","setItem","BottomNavigationAction","showLabel","label","value","icon","EnglishData","this","WORDS","reduce","val","cur","includes","part","push","w","sentence","sentenceTrans","some","v","EnglishVoice","text","lang","rate","voice","window","speechSynthesis","getVoices","filter","utter","SpeechSynthesisUtterance","speak","Word","display","height","partOfSpeech","length","className","Container","maxWidth","Grid","container","item","xs","Typography","variant","trans","Avatar","component","substr","visibleWord","word","direction","TextField","error","isInputWordCompleted","fullWidth","inputWordString","o","changeInputWord","target","toLowerCase","changeInputWordCompleted","onClick","speech","spacing","justify","alignItems","Button","color","React","Sentence","Box","visibleSentence","m","fontSize","speechSpeedRate","Pagination","size","onClickPrev","disabled","index","onClickNext","maxPage","Part","currentPart","SideMenu","useState","menuToggle","setMenuToggle","parts","classes","makeStyles","list","useStyles","IconButton","aria-label","edge","Drawer","anchor","open","onClose","List","map","p","ListItem","button","changeCurrentPart","ListItemText","primary","ListItemIcon","Divider","Slider","min","max","step","aria-labelledby","valueLabelDisplay","e","changeSpeechSpeedRate","WordPage","firstPart","getItem","getFirstPart","slides","setSlides","wordIndex","setWordIndex","setVisibleWord","setCurrentPart","setVisibleSentence","setIsInputWordCompleted","setInputWordString","setSpeechSpeedRate","slidePrev","newIndex","toString","slideNext","swipeHandles","useSwipeable","onSwipedLeft","absX","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","getParts","s","Grammer","stockWords","ansWords","lastChar","buttonStyle","minWidth","textTransform","margin","wordsStyle","minHeight","translate","isAnsComplated","moveStockWords","moveAnsWords","GrammerPage","getSentences","toLocaleLowerCase","slice","split","answer","setAnswer","setIsAnsComplated","a","weight","Math","random","sort","b","setStockWords","setAnsWords","i","separateSentence","shuffle","aw","sw","every","console","log","GrammerData","dummyWord","answerAddDummy","App","state","currentPage","theme","createMuiTheme","palette","main","colors","type","ThemeProvider","CssBaseline","WordGrammerPage","setState","changePage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b6b219f.chunk.js","sourcesContent":["import React from 'react';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\n\n\ninterface GlobalMenuProps {\n  currentPage: string,\n  changeCurrentPage: (val:pageNames) => void\n}\n\nconst GlobalMenu:React.FC<GlobalMenuProps> = props => {\n\n  const style:React.CSSProperties = {\n    position:'fixed',\n    bottom:0,\n    width: '100%',\n  }\n\n  return (\n    <BottomNavigation\n      showLabels={true}\n      style={style}\n      onChange={(event, newValue:pageNames) => {\n        props.changeCurrentPage(newValue);\n        sessionStorage.setItem('currentPage', newValue);\n      }}\n    >\n      <BottomNavigationAction showLabel={true} label='Word' value='WordPage' icon={<TextFormatIcon />} />\n      <BottomNavigationAction showLabel={true} label='Grammer1' value='WordGrammerPage'icon={<TextFieldsIcon />} />\n      <BottomNavigationAction showLabel={true} label='Grammer2' value='GrammerPage'icon={<TextFieldsIcon />} />\n    </BottomNavigation>\n  );\n}\n\nexport default GlobalMenu;","type sentenceType = {\n  part: string,\n  sentence: string,\n  sentenceTrans: string,\n}\n\nexport default class EnglishData {\n  static getFirstPart() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, [])[0];  \n  }\n\n  static getParts() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, []);  \n  }\n\n  static getSentences() {\n    return this.WORDS.reduce((val:sentenceType[], cur) => {\n      const w:sentenceType = {\n        part: cur.part,\n        sentence: cur.sentence, \n        sentenceTrans: cur.sentenceTrans\n      };\n\n      if (!val.some(v => \n        v.part === w.part && v.sentence === w.sentence)) {\n        val.push(w);\n      }\n      return val;\n    }, []);  \n  }\n\n  static readonly WORDS = \n[{\"id\":\"1\",\"part\":\"lesson01-01\",\"word\":\"Britain\",\"partOfSpeech\":\"名詞\",\"trans\":\"イギリス\",\"sentence\":\"Do you know anything about narrow boats in Britain?\",\"sentenceTrans\":\"あなたはイギリスのナローボートについて何か知っていますか？\",\"dummyWord\":\"\"},{\"id\":\"2\",\"part\":\"lesson01-01\",\"word\":\"British\",\"partOfSpeech\":\"形容詞\",\"trans\":\"イギリスの\",\"sentence\":\"They are boats you see in the British canals.\",\"sentenceTrans\":\"これらは イギリスの運河で見るボートです。\",\"dummyWord\":\"\"},{\"id\":\"3\",\"part\":\"lesson01-01\",\"word\":\"canal\",\"partOfSpeech\":\"名詞\",\"trans\":\"運河\",\"sentence\":\"They are boats you see in the British canals.\",\"sentenceTrans\":\"これらは イギリスの運河で見るボートです。\",\"dummyWord\":\"\"},{\"id\":\"4\",\"part\":\"lesson01-01\",\"word\":\"narrow\",\"partOfSpeech\":\"形容詞\",\"trans\":\"狭い\",\"sentence\":\"The boats are truly narrow; they are about two meters wide.\",\"sentenceTrans\":\"そのボートは ほんとに狭いです、それらは約２mの幅です。\",\"dummyWord\":\"\"},{\"id\":\"5\",\"part\":\"lesson01-01\",\"word\":\"bedroom\",\"partOfSpeech\":\"名詞\",\"trans\":\"寝室\",\"sentence\":\"They are, however, long enough to have bedrooms, kitchens, and bathrooms in them.\",\"sentenceTrans\":\"これらはしかしながら、寝室やキッチンやお風呂を設置するのに十分長いです。\",\"dummyWord\":\"\"},{\"id\":\"6\",\"part\":\"lesson01-01\",\"word\":\"camping car\",\"partOfSpeech\":\"名詞\",\"trans\":\"キャンピングカー\",\"sentence\":\"Narrow boats are like camping cars.\",\"sentenceTrans\":\"ナローボートは キャンピングカーのようなものです。\",\"dummyWord\":\"\"},{\"id\":\"7\",\"part\":\"lesson01-01\",\"word\":\"people\",\"partOfSpeech\":\"名詞\",\"trans\":\"人々\",\"sentence\":\"People can live on them for weeks at a time.\",\"sentenceTrans\":\"人々は、一度に何週間もこれらの上で過ごすことができる。\",\"dummyWord\":\"\"},{\"id\":\"8\",\"part\":\"lesson01-01\",\"word\":\"spend\",\"partOfSpeech\":\"動詞\",\"trans\":\"過ごす\",\"sentence\":\"These days, more and more people are spending their vacations on narrow boats.\",\"sentenceTrans\":\"最近、ますます休暇をナローボートで過ごす人が増えました。\",\"dummyWord\":\"\"},{\"id\":\"9\",\"part\":\"lesson01-01\",\"word\":\"leisure\",\"partOfSpeech\":\"名詞\",\"trans\":\"余暇、休暇\",\"sentence\":\"Around 30,000 boats are registered for leisure use in the British canals.\",\"sentenceTrans\":\"イギリスの運河では、余暇用に約3万隻のボートが登録されている。\",\"dummyWord\":\"\"},{\"id\":\"10\",\"part\":\"lesson01-01\",\"word\":\"narrow boat\",\"partOfSpeech\":\"名詞\",\"trans\":\"ナローボート（運河などで運行する船のこと）\",\"sentence\":\"This number is the highest in the history of narrow boats.\",\"sentenceTrans\":\"この数字は ナローボートの歴史の中で最も多いです。\",\"dummyWord\":\"\"},{\"id\":\"11\",\"part\":\"lesson01-02\",\"word\":\"trace\",\"partOfSpeech\":\"名詞\",\"trans\":\"起源\",\"sentence\":\"We can trace the origin of the boats to the beginning of the Industrial Revolution.\",\"sentenceTrans\":\"ボートの起源を産業革命の始まりまで辿ることができます。\",\"dummyWord\":\"\"},{\"id\":\"12\",\"part\":\"lesson01-02\",\"word\":\"industrial revolution\",\"partOfSpeech\":\"名詞\",\"trans\":\"産業革命\",\"sentence\":\"We can trace the origin of the boats to the beginning of the Industrial Revolution.\",\"sentenceTrans\":\"ボートの起源を産業革命の始まりまで辿ることができます。\",\"dummyWord\":\"\"},{\"id\":\"13\",\"part\":\"lesson01-02\",\"word\":\"mid-\",\"partOfSpeech\":\"形容詞\",\"trans\":\"半ば\",\"sentence\":\"In the mid-18th century, British people constructed many canals all over the island of Great Britain.\",\"sentenceTrans\":\"18世紀半ば、イギリス人はグレートブリテン島中に多くの運河を建設しました\",\"dummyWord\":\"\"},{\"id\":\"14\",\"part\":\"lesson01-02\",\"word\":\"construct\",\"partOfSpeech\":\"動詞\",\"trans\":\"建設\",\"sentence\":\"In the mid-18th century, British people constructed many canals all over the island of Great Britain.\",\"sentenceTrans\":\"18世紀半ば、イギリス人はグレートブリテン島中に多くの運河を建設しました\",\"dummyWord\":\"\"},{\"id\":\"15\",\"part\":\"lesson01-02\",\"word\":\"canal\",\"partOfSpeech\":\"名詞\",\"trans\":\"運河\",\"sentence\":\"The canals were narrow, and the boats had to be narrow, too.\",\"sentenceTrans\":\"運河は狭く、ボートも狭くなければなりませんでした。\",\"dummyWord\":\"\"},{\"id\":\"16\",\"part\":\"lesson01-02\",\"word\":\"transport\",\"partOfSpeech\":\"前置詞\",\"trans\":\"の輸送\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\",\"dummyWord\":\"\"},{\"id\":\"17\",\"part\":\"lesson01-02\",\"word\":\"coal\",\"partOfSpeech\":\"名詞\",\"trans\":\"石炭\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\",\"dummyWord\":\"\"},{\"id\":\"18\",\"part\":\"lesson01-02\",\"word\":\"iron\",\"partOfSpeech\":\"名詞\",\"trans\":\"鉄\",\"sentence\":\"The boats were used to transport coal, iron, and steel.\",\"sentenceTrans\":\"ボートは、石炭、鉄、鉄網の輸送に使用されました。\",\"dummyWord\":\"\"},{\"id\":\"19\",\"part\":\"lesson01-02\",\"word\":\"drew\",\"partOfSpeech\":\"動詞\",\"trans\":\"引く\",\"sentence\":\"Horses and humans drew the boats along the banks because they did not have engines in those days.\",\"sentenceTrans\":\"当時はエンジンがなかったので、馬と人間が岸に沿ってボートを引きました。\",\"dummyWord\":\"\"},{\"id\":\"20\",\"part\":\"lesson01-02\",\"word\":\"along\",\"partOfSpeech\":\"前置詞\",\"trans\":\"沿って\",\"sentence\":\"Horses and humans drew the boats along the banks because they did not have engines in those days.\",\"sentenceTrans\":\"当時はエンジンがなかったので、馬と人間が岸に沿ってボートを引きました。\",\"dummyWord\":\"\"},{\"id\":\"21\",\"part\":\"lesson01-02\",\"word\":\"fashion\",\"partOfSpeech\":\"名詞\",\"trans\":\"流行\",\"sentence\":\"After railroads became common, narrow boats went out of fashion and were forgotte.\",\"sentenceTrans\":\"鉄道が一般的になった後、ナロウボートは時代遅れになり、忘れられました。\",\"dummyWord\":\"\"},{\"id\":\"22\",\"part\":\"lesson01-02\",\"word\":\"remain\",\"partOfSpeech\":\"動詞\",\"trans\":\"残す\",\"sentence\":\"Only the canals remaind.\",\"sentenceTrans\":\"運河だけが残りました。\",\"dummyWord\":\"\"},{\"id\":\"23\",\"part\":\"lesson01-03\",\"word\":\"popular\",\"partOfSpeech\":\"形容詞\",\"trans\":\"人気がある\",\"sentence\":\"Why are the boats so popular today?\",\"sentenceTrans\":\"なぜ今日のボートはそんなに人気があるのですか？\",\"dummyWord\":\"\"},{\"id\":\"24\",\"part\":\"lesson01-03\",\"word\":\"access\",\"partOfSpeech\":\"動詞\",\"trans\":\"利用する\",\"sentence\":\"First, as there are canals all over Britain, narrow boats can be easily accessed.\",\"sentenceTrans\":\"まず最初に、イギリス全土に運河があるので、ナロウボートに簡単に利用できます。\",\"dummyWord\":\"\"},{\"id\":\"25\",\"part\":\"lesson01-03\",\"word\":\"rush\",\"partOfSpeech\":\"動詞\",\"trans\":\"急ぐ\",\"sentence\":\"People do not have to travel far or rush to an airport to start their vacations.\",\"sentenceTrans\":\"人々は休暇を始めるのに、遠くに旅行したり空港に急いだりする必要はありません。\",\"dummyWord\":\"\"},{\"id\":\"26\",\"part\":\"lesson01-03\",\"word\":\"easy to steer\",\"partOfSpeech\":\"\",\"trans\":\"操縦しやすい\",\"sentence\":\"Second, the boats are safe and easy to steer.\",\"sentenceTrans\":\"第二に、ボートは操縦しやすく安全です。\",\"dummyWord\":\"\"},{\"id\":\"27\",\"part\":\"lesson01-03\",\"word\":\"approximately\",\"partOfSpeech\":\"副詞\",\"trans\":\"およそ\",\"sentence\":\"Even though they hae engines now, they cruise just a little faster than walking speed approximately six kilometers an hour.\",\"sentenceTrans\":\"彼らは現在エンジンを持っていますが、時速およそ６キロの歩行速度よりも少し早く巡航します\",\"dummyWord\":\"\"},{\"id\":\"28\",\"part\":\"lesson01-03\",\"word\":\"require\",\"partOfSpeech\":\"動詞\",\"trans\":\"必要とする\",\"sentence\":\"So no license is required.\",\"sentenceTrans\":\"したがって、ライセンスは必要ないです。\",\"dummyWord\":\"\"},{\"id\":\"29\",\"part\":\"lesson01-03\",\"word\":\"pace\",\"partOfSpeech\":\"名詞\",\"trans\":\"ペース\",\"sentence\":\"Finally, the slow pace makes the voyage fun.\",\"sentenceTrans\":\"最後に、ゆっくりなペースは航海を楽しくします。\",\"dummyWord\":\"\"},{\"id\":\"30\",\"part\":\"lesson01-03\",\"word\":\"voyage\",\"partOfSpeech\":\"名詞\",\"trans\":\"航海\",\"sentence\":\"Finally, the slow pace makes the voyage fun.\",\"sentenceTrans\":\"最後に、ゆっくりなペースは航海を楽しくします。\",\"dummyWord\":\"\"},{\"id\":\"31\",\"part\":\"lesson01-03\",\"word\":\"onboard\",\"partOfSpeech\":\"形容詞\",\"trans\":\"機内の\",\"sentence\":\"People onboard enjoy saying hello to other boaters when they pass each other.\",\"sentenceTrans\":\"船内の人々は、すれ違う際に他の乗客に挨拶をするのを楽しんでいます\",\"dummyWord\":\"\"},{\"id\":\"32\",\"part\":\"lesson01-03\",\"word\":\"boater\",\"partOfSpeech\":\"名詞\",\"trans\":\"船の乗客\",\"sentence\":\"People onboard enjoy saying hello to other boaters when they pass each other.\",\"sentenceTrans\":\"船内の人々は、すれ違う際に他の乗客に挨拶をするのを楽しんでいます\",\"dummyWord\":\"\"},{\"id\":\"33\",\"part\":\"lesson01-03\",\"word\":\"in a hurry\",\"partOfSpeech\":\"\",\"trans\":\"急いで\",\"sentence\":\"Since most of the canals are for leisure use, nobody is in a hurry.\",\"sentenceTrans\":\"ほとんどの運河は休暇用なので、誰も急いでません。\",\"dummyWord\":\"\"},{\"id\":\"34\",\"part\":\"lesson01-03\",\"word\":\"boating\",\"partOfSpeech\":\"名詞\",\"trans\":\"ボート遊び\",\"sentence\":\"Boating on the canals is enjoyable and relaxing.\",\"sentenceTrans\":\"運河でのボート遊びは楽しくリラックスできます。\",\"dummyWord\":\"\"},{\"id\":\"35\",\"part\":\"lesson01-04\",\"word\":\"themselves\",\"partOfSpeech\":\"代名詞\",\"trans\":\"自分自身\",\"sentence\":\"In this way, British people can refresh themselves and forget about their busy life.\",\"sentenceTrans\":\"このようにして、英国の人々は自分自身をリフレッシュし、忙しい生活を忘れることができます。\",\"dummyWord\":\"\"},{\"id\":\"36\",\"part\":\"lesson01-04\",\"word\":\"peaceful\",\"partOfSpeech\":\"形容詞\",\"trans\":\"平和な\",\"sentence\":\"What used to carry iron and steel now provides a slow, peaceful experience.\",\"sentenceTrans\":\"かつて鉄網を運んでいたものが、今ではゆっくりと平和な体験を提供しています。\",\"dummyWord\":\"\"},{\"id\":\"37\",\"part\":\"Unit01-01\",\"word\":\"memory\",\"partOfSpeech\":\"名詞\",\"trans\":\"記憶\",\"sentence\":\"Everyone wants to keep happy memories forever.\",\"sentenceTrans\":\"誰もが幸せな記憶を永遠に保っておきたいです。\",\"dummyWord\":\"\"},{\"id\":\"38\",\"part\":\"Unit01-01\",\"word\":\"natural\",\"partOfSpeech\":\"形容詞\",\"trans\":\"自然\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\",\"dummyWord\":\"\"},{\"id\":\"39\",\"part\":\"Unit01-01\",\"word\":\"capture\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を捕らえる\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\",\"dummyWord\":\"\"},{\"id\":\"40\",\"part\":\"Unit01-01\",\"word\":\"moment\",\"partOfSpeech\":\"名詞\",\"trans\":\"瞬間\",\"sentence\":\"So it is very natural to try to capture happy moments by taking photos.\",\"sentenceTrans\":\"なので、写真を撮って幸せな瞬間をとらえようとするのはとても自然です。\",\"dummyWord\":\"\"},{\"id\":\"41\",\"part\":\"Unit01-01\",\"word\":\"take photos\",\"partOfSpeech\":\"\",\"trans\":\"写真を撮る\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"42\",\"part\":\"Unit01-01\",\"word\":\"however\",\"partOfSpeech\":\"副詞\",\"trans\":\"しかしながら\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"43\",\"part\":\"Unit01-01\",\"word\":\"recent\",\"partOfSpeech\":\"形容詞\",\"trans\":\"最近の\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"44\",\"part\":\"Unit01-01\",\"word\":\"actually\",\"partOfSpeech\":\"副詞\",\"trans\":\"実際は\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"45\",\"part\":\"Unit01-01\",\"word\":\"damage\",\"partOfSpeech\":\"他動詞\",\"trans\":\"に損害を与える\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"46\",\"part\":\"Unit01-01\",\"word\":\"ability\",\"partOfSpeech\":\"名詞\",\"trans\":\"能力\",\"sentence\":\"However, a recent study showed that taking photos can actually damage people's ability to remember things.\",\"sentenceTrans\":\"しかし、最近の研究によると、写真を撮ることは実際は記憶することにダメージを与えています。\",\"dummyWord\":\"\"},{\"id\":\"47\",\"part\":\"Unit01-02\",\"word\":\"experiment\",\"partOfSpeech\":\"名詞\",\"trans\":\"実験\",\"sentence\":\"In one experiment,\",\"sentenceTrans\":\"\",\"dummyWord\":\"\"},{\"id\":\"48\",\"part\":\"Unit01-02\",\"word\":\"university\",\"partOfSpeech\":\"名詞\",\"trans\":\"大学\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\",\"dummyWord\":\"\"},{\"id\":\"49\",\"part\":\"Unit01-02\",\"word\":\"invite\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を招待する\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\",\"dummyWord\":\"\"},{\"id\":\"50\",\"part\":\"Unit01-02\",\"word\":\"museum\",\"partOfSpeech\":\"名詞\",\"trans\":\"博物館\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\",\"dummyWord\":\"\"},{\"id\":\"51\",\"part\":\"Unit01-02\",\"word\":\"object\",\"partOfSpeech\":\"名詞\",\"trans\":\"物\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\",\"dummyWord\":\"\"},{\"id\":\"52\",\"part\":\"Unit01-02\",\"word\":\"display\",\"partOfSpeech\":\"名詞\",\"trans\":\"画面\",\"sentence\":\"university students were invited on a museum tour and asked to remember the objects on display\",\"sentenceTrans\":\"大学生は博物館ツアーに招待され、展示されているものを覚えてくるように頼まれました\",\"dummyWord\":\"\"},{\"id\":\"53\",\"part\":\"Unit01-02\",\"word\":\"allow - to do\",\"partOfSpeech\":\"\",\"trans\":\"- が --することを許す。\",\"sentence\":\"One group was allowed to take pictures while they looked around the museum, and the other group was asked to go without cameras.\",\"sentenceTrans\":\"一つのグループは美術館を見回しながら写真を撮ることを許可され、もう一方のグループはカメラを撮ることを許可しないように頼みました\",\"dummyWord\":\"\"},{\"id\":\"54\",\"part\":\"Unit01-02\",\"word\":\"without\",\"partOfSpeech\":\"前置詞\",\"trans\":\"なしで\",\"sentence\":\"One group was allowed to take pictures while they looked around the museum, and the other group was asked to go without cameras.\",\"sentenceTrans\":\"一つのグループは美術館を見回しながら写真を撮ることを許可され、もう一方のグループはカメラを撮ることを許可しないように頼みました\",\"dummyWord\":\"\"},{\"id\":\"55\",\"part\":\"Unit01-03\",\"word\":\"result\",\"partOfSpeech\":\"名詞\",\"trans\":\"結果\",\"sentence\":\"The results showed that the students who had taken photos did not remember as well as the students who had observed the objects only with their eyes.\",\"sentenceTrans\":\"その結果、写真を撮った生徒は、目だけで物を観察した生徒と同様に、覚えていないことがわかりました。\",\"dummyWord\":\"\"},{\"id\":\"56\",\"part\":\"Unit01-03\",\"word\":\"observe\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を観察する\",\"sentence\":\"The results showed that the students who had taken photos did not remember as well as the students who had observed the objects only with their eyes.\",\"sentenceTrans\":\"その結果、写真を撮った生徒は、目だけで物を観察した生徒と同様に、覚えていないことがわかりました。\",\"dummyWord\":\"\"},{\"id\":\"57\",\"part\":\"Unit01-03\",\"word\":\"furthermore\",\"partOfSpeech\":\"副詞\",\"trans\":\"さらに\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったものよりもカメラを使う物体の詳細についてあまり覚えていなかった。\",\"dummyWord\":\"\"},{\"id\":\"58\",\"part\":\"Unit01-03\",\"word\":\"detail\",\"partOfSpeech\":\"名詞\",\"trans\":\"細部\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったものよりもカメラを使う物体の詳細についてあまり覚えていなかった。\",\"dummyWord\":\"\"},{\"id\":\"59\",\"part\":\"Unit01-03\",\"word\":\"photograph\",\"partOfSpeech\":\"他動詞\",\"trans\":\"写真を撮る\",\"sentence\":\"Furthermore, they remembered less about the details of the details of the objects they photographed than those they didn't.\",\"sentenceTrans\":\"さらに、彼らは、カメラを使わなかったグループよりもカメラを使ったグループの方が詳細についてあまり覚えていなかった。\",\"dummyWord\":\"\"},{\"id\":\"60\",\"part\":\"Unit01-03\",\"word\":\"researcher\",\"partOfSpeech\":\"名詞\",\"trans\":\"研究者、調査者\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\",\"dummyWord\":\"\"},{\"id\":\"61\",\"part\":\"Unit01-03\",\"word\":\"this is because -\",\"partOfSpeech\":\"\",\"trans\":\"これは - だからだ\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\",\"dummyWord\":\"\"},{\"id\":\"62\",\"part\":\"Unit01-03\",\"word\":\"rely on\",\"partOfSpeech\":\"\",\"trans\":\"に頼る\",\"sentence\":\"The researchers say this is because people rely on cameras to remember things for them when they are allowed to take pictures\",\"sentenceTrans\":\"研究者たちは、これは人々が写真を撮ることを許可されたときに彼らのために物事を覚える代わりにカメラに依存しているためだと言います\",\"dummyWord\":\"\"},{\"id\":\"63\",\"part\":\"Unit01-03\",\"word\":\"as a result\",\"partOfSpeech\":\"\",\"trans\":\"その結果\",\"sentence\":\"As a result, they end up remembering less.\",\"sentenceTrans\":\"その結果、彼らは少ししか覚えていないことになります。\",\"dummyWord\":\"\"},{\"id\":\"64\",\"part\":\"Unit01-03\",\"word\":\"end up doing\",\"partOfSpeech\":\"\",\"trans\":\"結局 〜することになる\",\"sentence\":\"As a result, they end up remembering less.\",\"sentenceTrans\":\"その結果、彼らは少ししか覚えていないことになります。\",\"dummyWord\":\"\"},{\"id\":\"65\",\"part\":\"Unit01-04\",\"word\":\"almost\",\"partOfSpeech\":\"副詞\",\"trans\":\"ほとんど\",\"sentence\":\"People have happy moments to remember almost every day,\",\"sentenceTrans\":\"人々はほぼ毎日覚えて幸せな瞬間を持っています。\",\"dummyWord\":\"\"},{\"id\":\"66\",\"part\":\"Unit01-04\",\"word\":\"everwhere\",\"partOfSpeech\":\"副詞\",\"trans\":\"どこでも\",\"sentence\":\"everywhere:\",\"sentenceTrans\":\"どこでも\",\"dummyWord\":\"\"},{\"id\":\"67\",\"part\":\"Unit01-04\",\"word\":\"close\",\"partOfSpeech\":\"形容詞\",\"trans\":\"近い\",\"sentence\":\"having a nice dinner with close friends;\",\"sentenceTrans\":\"親友をいいディナーをすること\",\"dummyWord\":\"\"},{\"id\":\"68\",\"part\":\"Unit01-04\",\"word\":\"discover\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を発見する\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\",\"dummyWord\":\"\"},{\"id\":\"69\",\"part\":\"Unit01-04\",\"word\":\"blossom\",\"partOfSpeech\":\"名詞\",\"trans\":\"花\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\",\"dummyWord\":\"\"},{\"id\":\"70\",\"part\":\"Unit01-04\",\"word\":\"on the way to\",\"partOfSpeech\":\"\",\"trans\":\"へ行く途中に\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\",\"dummyWord\":\"\"},{\"id\":\"71\",\"part\":\"Unit01-04\",\"word\":\"celebrate\",\"partOfSpeech\":\"他動詞\",\"trans\":\"を祝う\",\"sentence\":\"discovering beautiful blossams on the way to school or work; or celebrating someone's birthday.\",\"sentenceTrans\":\"学校や仕事に行く途中で美しい花を発見したり、誰かの誕生日を祝う。\",\"dummyWord\":\"\"},{\"id\":\"72\",\"part\":\"Unit01-04\",\"word\":\"in any case\",\"partOfSpeech\":\"\",\"trans\":\"どの場合でも\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\",\"dummyWord\":\"\"},{\"id\":\"73\",\"part\":\"Unit01-04\",\"word\":\"really\",\"partOfSpeech\":\"副詞\",\"trans\":\"本当\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\",\"dummyWord\":\"\"},{\"id\":\"74\",\"part\":\"Unit01-04\",\"word\":\"for a long time\",\"partOfSpeech\":\"\",\"trans\":\"長い間\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\",\"dummyWord\":\"\"},{\"id\":\"75\",\"part\":\"Unit01-04\",\"word\":\"put away\",\"partOfSpeech\":\"\",\"trans\":\"をしまう\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\",\"dummyWord\":\"\"},{\"id\":\"76\",\"part\":\"Unit01-04\",\"word\":\"own\",\"partOfSpeech\":\"形容詞\",\"trans\":\"自身の\",\"sentence\":\"In any case, if you really want to remember these moments for a long time, put away your smartphone and try to see things with your own eyes!\",\"sentenceTrans\":\"どの場合でも、本当に長い間思い出したいのなら、スマホを片付けて自分の目で見てみてください！\",\"dummyWord\":\"\"}]}\n\n","class EnglishVoice {\n  static speech(text:string, lang: string, rate: number) {\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices().filter(voice => voice.lang === lang);\n    const voice = voices[0];\n    const utter = new SpeechSynthesisUtterance();\n    utter.text = text;\n    utter.lang = lang;\n    utter.voice = voice;\n    utter.rate = rate;\n    window.speechSynthesis.speak(utter);\n  }\n}\n\nexport default EnglishVoice;","import * as React from 'react';\nimport { Container, Button, Grid, Typography, TextField, Avatar } from '@material-ui/core';\nimport EnglishVoice from '../../lib/EnglishVoice';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport 'fontsource-roboto';\n\ninterface WordProps {\n    word: string;\n    partOfSpeech: string;\n    trans: string;\n    visibleWord: string;\n    isInputWordCompleted: boolean;\n    inputWordString:string;\n    onClick: () => void;\n    changeInputWordCompleted: (val:boolean) => void;\n    changeInputWord: (val:string) => void;    \n}\n\nclass Word extends React.Component<WordProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n    \n    const partOfSpeech = this.props.partOfSpeech.length ? this.props.partOfSpeech : '';\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <Grid container>\n            <Grid item xs={10}>\n              <Typography variant='subtitle1'>\n                {this.props.trans}\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Avatar\n                variant='circular'\n                component='span'\n              >\n                {partOfSpeech.substr(0,1)}\n              </Avatar>\n            </Grid>\n          </Grid>\n          <Typography variant='h4' className={this.props.visibleWord}>\n            {this.props.word}\n          </Typography>\n          <br/>\n          <Grid container direction=\"row\">\n            <TextField\n              error={!this.props.isInputWordCompleted}\n              label= {this.props.isInputWordCompleted ? \"OK\" : \"input word\"}\n              fullWidth={true}\n              value={this.props.inputWordString}\n              variant=\"outlined\"\n              onChange={(o) => \n                {\n                  this.props.changeInputWord(o.target.value.toLowerCase());\n                  if (this.props.word.toLowerCase() === o.target.value.toLowerCase()) {\n                    this.props.changeInputWordCompleted(true);\n                    this.props.onClick();\n                    EnglishVoice.speech('OK. '+this.props.word, 'en-US', 1);\n                  } else {\n                    this.props.changeInputWordCompleted(false);\n                  }\n                }\n              }\n            />\n          </Grid>\n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={() => this.props.onClick()}\n                >\n                  <TranslateIcon/>\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                onClick={() => {\n                  EnglishVoice.speech(this.props.word, 'en-US', 1);\n                }}\n              >\n                <VolumeUpIcon/>\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Word;","import * as React from 'react';\nimport { Container, Button, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport EnglishVoice from '../../lib/EnglishVoice';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport 'fontsource-roboto';\n\n\ninterface SentenceProps {\n    sentence: string;\n    trans: string;\n    visibleSentence: string;\n    speechSpeedRate: number;\n    onClick: () => void;\n}\n\nclass Sentence extends React.Component<SentenceProps, {}>{\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <div onClick={() => this.props.onClick()}>\n            <p className=\"word\">{this.props.trans}</p>\n          </div>\n          <Typography component=\"div\">\n            <Box\n              className={this.props.visibleSentence}\n              m={1}\n            >\n              {this.props.sentence}\n            </Box>\n          </Typography>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => this.props.onClick()}\n              >\n                <TranslateIcon\n                  fontSize='small'\n                />\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                onClick={() => {\n                  EnglishVoice.speech(this.props.sentence, 'en-US', this.props.speechSpeedRate);\n                }}\n              >\n                <VolumeUpIcon\n                  fontSize='small'\n                />\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Sentence;","import * as React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport 'fontsource-roboto';\n\ninterface PaginationProps {\n  index: number;\n  maxPage: number;\n  onClickPrev: () => void;\n  onClickNext: () => void;\n} \nconst Pagination: React.FC<PaginationProps> = (props) => {\n  return (\n    <Grid\n    container\n    direction=\"row\"\n    justify=\"space-around\"\n    alignItems=\"flex-end\"\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => props.onClickPrev()}\n        disabled={props.index === 0 ? true : false}\n      >\n        <ArrowBackIosIcon />\n      </Button> \n      <Button \n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => props.onClickNext()}\n        disabled={props.index >= props.maxPage-1 ? true : false}\n      >\n        <ArrowForwardIosIcon />\n      </Button>\n    </Grid>\n  );\n}\n\nexport default Pagination;","import * as React from 'react';\nimport { Grid, Typography, Box } from '@material-ui/core';\n\nconst Part: React.FC<{currentPart: string}> = ({currentPart}) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-around\"\n      alignItems=\"flex-end\"\n    >\n        <Typography component=\"div\">\n          <Box\n            fontSize=\"h6.fontSize\" m={1}\n          >\n            {currentPart}\n          </Box>\n        </Typography>        \n    </Grid>\n  );\n}\n\nexport default Part;","import React, { useState } from 'react';\nimport { Drawer, IconButton, List, ListItem, Slider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { ListItemText, ListItemIcon } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\n\ninterface SideMenuProps {\n  parts: string[];\n  currentPart: string;\n  changeCurrentPart: (val:string) => void;\n  speechSpeedRate: number;\n  changeSpeechSpeedRate: (val:number) => void;\n}\n\nconst SideMenu: React.FC<SideMenuProps> = props => {\n  const [menuToggle, setMenuToggle] = useState(false);\n\n  const toggleDrawer = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const parts = props.parts;\n\n  const useStyles = makeStyles({\n    list: {\n      width: '50vw',\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"end\"\n        onClick={() => toggleDrawer()}\n      />\n      <Drawer\n        anchor='right'\n        open={menuToggle}\n        onClose={() => setMenuToggle(false)}\n      >\n        <div className={classes.list}>\n          <CloseIcon\n            onClick={() => setMenuToggle(false)}\n          />\n          <List component=\"nav\" aria-label=\"secondary part\">\n            {\n              parts.map(p => {\n                return (\n                  <ListItem \n                    button\n                    onClick={() => {\n                      props.changeCurrentPart(p);\n                      setMenuToggle(false);\n                    }}\n                    key={p}\n                  >\n                    <ListItemText primary={p}/>\n                    <ListItemIcon>\n                      {\n                        p === props.currentPart\n                        &&\n                        <CheckIcon />\n                      }\n                    </ListItemIcon>\n                  </ListItem>\n                )\n              })\n            }\n          </List>\n          <Divider />\n          <List component=\"nav\" aria-label=\"thirdry speechSpeed\">\n            <ListItem>\n              <Slider\n                min={0.1}\n                max={1}\n                step={0.1}\n                value={props.speechSpeedRate}\n                aria-labelledby=\"speech-speed-rate\"\n                valueLabelDisplay=\"auto\"\n                onChange={(e, v) => {\n                  let rate:number = props.speechSpeedRate;\n                  if (typeof(v) ===  'number') {\n                    rate = v;\n                  }\n                  props.changeSpeechSpeedRate(rate);\n                }}\n              />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <MenuIcon />\n    </>\n  );\n}\n\nexport default SideMenu;","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport EnglishData from '../context/EnglishData';\nimport Word from '../components/WordPage/Word';\nimport Sentence from '../components/WordPage/Sentence';\nimport Paginate from '../components/Pagination';\nimport Part from '../components/Part';\nimport SideMenu from '../components/SideMenu';\nimport { useSwipeable } from \"react-swipeable\";\n\nconst WordPage: React.FC<{}> = () => {\n  const firstPart = sessionStorage.getItem('wordCurrentPart') ?? EnglishData.getFirstPart();\n  const [slides, setSlides] = useState(EnglishData.WORDS.filter(w => w.part === firstPart));\n  const [wordIndex, setWordIndex] = useState<number>(0);\n  const [visibleWord, setVisibleWord] = useState<string>('word-hidden');\n  const [currentPart, setCurrentPart] = useState<string>(firstPart);\n  const [visibleSentence, setVisibleSentence] = useState<string>('word-hidden');\n  const [isInputWordCompleted, setIsInputWordCompleted] = useState<boolean>(false);\n  const [inputWordString, setInputWordString] = useState<string>('');\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      const newIndex = wordIndex-1\n      setWordIndex(newIndex);\n      sessionStorage.setItem('wordWordIndex', newIndex.toString());\n      setVisibleWord('word-hidden');\n      setVisibleSentence('word-hidden');\n      setIsInputWordCompleted(false);\n      setInputWordString('');\n    }\n  }\n\n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      const newIndex = wordIndex+1;\n      setWordIndex(newIndex);\n      sessionStorage.setItem('wordWordIndex', newIndex.toString());\n      setVisibleWord('word-hidden');\n      setVisibleSentence('word-hidden');\n      setIsInputWordCompleted(false);\n      setInputWordString('');\n    }\n  }\n\n  const changeInputWordCompleted = (val: boolean) => {\n    setIsInputWordCompleted(val);\n  }\n\n  const changeInputWord = (val: string) => {\n    setInputWordString(val);\n  }\n\n  const changeCurrentPart = (val: string) => {\n    if (currentPart !== val) {\n      const s = EnglishData.WORDS.filter(w => w.part === val);\n        setSlides(s)\n        setCurrentPart(val);\n        sessionStorage.setItem('wordCurrentPart', val);\n        setWordIndex(0);\n        sessionStorage.setItem('wordWordIndex', '0');\n        setVisibleWord('word-hidden');\n        setVisibleSentence('word-hidden');\n        setIsInputWordCompleted(false);\n        setInputWordString('');\n      }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const swipeHandles = useSwipeable({\n    onSwipedLeft: (e) => {\n      if (e.absX >= 140 ) {\n        slideNext();\n      }\n    },\n    onSwipedRight: (e) => {\n      if (e.absX >= 140) {\n        slidePrev();\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  return (\n    <>\n      <SideMenu\n        parts={EnglishData.getParts()}\n        currentPart={currentPart}\n        changeCurrentPart={(val) => changeCurrentPart(val)}\n        speechSpeedRate={speechSpeedRate}\n        changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n      />\n      <Container maxWidth=\"sm\">\n        <Paginate\n          index={wordIndex}\n          maxPage={slides.length}\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        <div {...swipeHandles}>\n          <Word\n            word={slides[wordIndex].word}\n            partOfSpeech={slides[wordIndex].partOfSpeech}\n            trans={slides[wordIndex].trans}\n            visibleWord = {visibleWord}\n            isInputWordCompleted={isInputWordCompleted}\n            inputWordString={inputWordString}\n            onClick={() => setVisibleWord('word-visible')}\n            changeInputWordCompleted={(val) => changeInputWordCompleted(val)}\n            changeInputWord={(val) => changeInputWord(val)}\n          />\n        </div>\n        <hr/>\n        <Sentence\n          sentence={slides[wordIndex].sentence}\n          trans={slides[wordIndex].sentenceTrans}\n          visibleSentence={visibleSentence}\n          speechSpeedRate={speechSpeedRate}\n          onClick = {() => setVisibleSentence('word-visible')}\n        />\n        <hr/>\n        <Part\n          currentPart={currentPart}\n        />\n      </Container>\n    </>\n  )\n} \n\nexport default WordPage;","import React from 'react';\nimport { Container, Button, Grid, Typography } from '@material-ui/core';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport EnglishVoice from '../../lib/EnglishVoice';\n\ninterface GrammerProps {\n  answer: string[];\n  stockWords: string[];\n  ansWords: string[];\n  sentence: string;\n  translate: string;\n  isAnsComplated: boolean;\n  speechSpeedRate: number;\n  moveAnsWords: (w:string, i:number) => void;\n  moveStockWords: (w:string, i:number) => void;\n}\n\nconst Grammer: React.FC<GrammerProps> = props => {\n  const stockWords = props.stockWords;\n  const ansWords = props.ansWords;\n  const lastChar:string = props.sentence.substr(-1);\n\n  const buttonStyle: React.CSSProperties = {\n    display: 'inline-block',\n    minWidth: '20px',\n    height: '40px',\n    textTransform: 'lowercase',\n    margin: '5px',\n  }\n\n  const wordsStyle: React.CSSProperties = {\n    minHeight: '30vh',\n  }\n\n  const style: React.CSSProperties = {\n    display: 'inline-block',\n    width: '100%',\n    height: '20%',\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Grid container>\n          <Typography variant='subtitle1'>\n            {props.translate}\n          </Typography>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            ansWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color={props.isAnsComplated ? 'default' : 'secondary'}\n                  variant={props.isAnsComplated ? 'outlined' : 'contained'}\n                  size=\"small\"\n                  onClick={() => props.moveStockWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n          <Button\n            style={buttonStyle}\n            color=\"default\"\n            variant=\"text\"\n            size=\"small\"\n            key=\"lastChar\"\n          >\n            {lastChar}\n          </Button>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            stockWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => props.moveAnsWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n        </Grid>\n      </Container>\n      <hr />\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          <Button\n            style={style}\n            variant=\"outlined\"\n            onClick={() => {\n              EnglishVoice.speech(props.sentence, 'en-US', props.speechSpeedRate);\n            }}\n          >\n            <VolumeUpIcon\n              fontSize='small'\n            />\n          </Button>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Grammer;","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Paginate from '../components/Pagination';\nimport Grammer from '../components/WordGrammerPage/Grammer';\nimport SideMenu from '../components/SideMenu';\nimport EnglishData from '../context/EnglishData';\nimport EnglishVoice from '../lib/EnglishVoice';\nimport { useSwipeable } from 'react-swipeable';\n\nconst GrammerPage:React.FC = () => {\n  const [slides, setSlides] = useState(EnglishData.getSentences().filter(w => w.part === EnglishData.getFirstPart()));\n  const [wordIndex, setWordIndex] = useState<number>(0);\n  const [currentPart, setCurrentPart] = useState<string>(EnglishData.getFirstPart());\n  const [answer, setAnswer] = useState<string[]>(slides[wordIndex].sentence.toLocaleLowerCase().slice(0, -1).split(' '));\n  const [isAnsComplated, setIsAnsComplated] = useState<boolean>(false);\n  const [stockWords, setStockWords] = useState<string[]>(\n    answer\n      .map(function (a) { return { weight: Math.random(), value: a } })\n      .sort(function (a, b) { return a.weight - b.weight })\n      .map(function (a) { return a.value })\n  );\n  const [ansWords, setAnsWords] = useState<string[]>([]);\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      const i:number = wordIndex - 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      const i:number = wordIndex + 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      setStockWords(shuffle(s));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeCurrentPart = (val: string) => {\n    if (currentPart !== val) {\n      const s = EnglishData.getSentences().filter(w => w.part === val);\n      setSlides(s)\n      setCurrentPart(val);\n      setWordIndex(0);\n\n      const a:string[] = separateSentence(s[0].sentence);\n      setAnswer(a);\n      setStockWords(shuffle(a));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const moveAnsWords = (word: string, index: number) => {\n    const aw = ansWords;\n    const sw = stockWords.filter((v, i) => {\n      return i !== index;\n    });\n    aw.push(word);\n\n    setAnsWords(aw);\n    setStockWords(sw);\n\n    EnglishVoice.speech(word, 'en-US', 1);\n    if (answer.length === aw.length && answer.every((a, index) => a === aw[index])) {\n      setIsAnsComplated(true);\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    } else {\n      setIsAnsComplated(false);\n    }\n  }\n\n  const moveStockWords = (word: string, index: number) => {\n    const sw = stockWords;\n    const aw = ansWords.filter((v, i) => {\n      return i !== index;\n    });\n    sw.push(word);\n\n    setStockWords(sw);\n    setAnsWords(aw);\n    if (answer.length === aw.length && answer.every((a, index) => a === aw[index])) {\n      setIsAnsComplated(true);\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    } else {\n      setIsAnsComplated(false);\n    }\n  }\n\n  const separateSentence = (s:string) => {\n    return s.toLocaleLowerCase().slice(0, -1).split(' ');\n  }\n\n  const shuffle = (w:string[]) => {\n    return w.map(function (a) { return { weight: Math.random(), value: a } })\n    .sort(function (a, b) { return a.weight - b.weight })\n    .map(function (a) { return a.value })\n  }\n\n  const swipeHandles = useSwipeable({\n    onSwipedLeft: (e) => {\n      if (e.absX >= 140 ) {\n        slideNext();\n      }\n    },\n    onSwipedRight: (e) => {\n      if (e.absX >= 140) {\n        slidePrev();\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  return (\n    <>\n      <SideMenu\n        parts={EnglishData.getParts()}\n        currentPart={currentPart}\n        changeCurrentPart={(val) => changeCurrentPart(val)}\n        speechSpeedRate={speechSpeedRate}\n        changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n      />\n      <Container>\n        <Paginate\n          index={wordIndex}\n          maxPage={slides.length}\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        <div {...swipeHandles}>\n          <Grammer\n            answer={answer}\n            stockWords={stockWords}\n            ansWords={ansWords}\n            sentence={slides[wordIndex].sentence}\n            translate={slides[wordIndex].sentenceTrans}\n            isAnsComplated={isAnsComplated}\n            speechSpeedRate={speechSpeedRate}\n            moveAnsWords={(w, i) => moveAnsWords(w, i)}\n            moveStockWords={(w, i) => moveStockWords(w, i)}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default GrammerPage;","import React from 'react';\nimport { Container, Button, Grid, Typography } from '@material-ui/core';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport EnglishVoice from '../../lib/EnglishVoice';\n\ninterface GrammerProps {\n  answer: string[];\n  stockWords: string[];\n  ansWords: string[];\n  sentence: string;\n  translate: string;\n  isAnsComplated: boolean;\n  moveAnsWords: (w:string, i:number) => void;\n  moveStockWords: (w:string, i:number) => void;\n}\n\nconst Grammer: React.FC<GrammerProps> = props => {\n  const stockWords = props.stockWords;\n  const ansWords = props.ansWords;\n  const lastChar:string = props.sentence.substr(-1);\n\n  const buttonStyle: React.CSSProperties = {\n    display: 'inline-block',\n    minWidth: '20px',\n    height: '40px',\n    textTransform: 'lowercase',\n    margin: '5px',\n  }\n\n  const wordsStyle: React.CSSProperties = {\n    height: '30vh',\n  }\n\n  const style: React.CSSProperties = {\n    display: 'inline-block',\n    width: '100%',\n    height: '20%',\n  }\n\n  console.log(stockWords);\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Grid container>\n          <Typography variant='subtitle1'>\n            {props.translate}\n          </Typography>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            ansWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color={props.isAnsComplated ? 'default' : 'secondary'}\n                  variant={props.isAnsComplated ? 'outlined' : 'contained'}\n                  size=\"small\"\n                  onClick={() => props.moveStockWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n          <Button\n            style={buttonStyle}\n            color=\"default\"\n            variant=\"text\"\n            size=\"small\"\n            key=\"lastChar\"\n          >\n            {lastChar}\n          </Button>\n        </Grid>\n      </Container>\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          {\n            stockWords.map((w, index) => {\n              return (\n                <Button\n                  style={buttonStyle}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => props.moveAnsWords(w, index)}\n                  key={index}\n                >\n                  {w}\n                </Button>\n              )\n            })\n          }\n        </Grid>\n      </Container>\n      <hr />\n      <Container maxWidth=\"sm\" style={wordsStyle}>\n        <Grid container>\n          <Button\n            style={style}\n            variant=\"outlined\"\n            onClick={() => {\n              EnglishVoice.speech(props.sentence, 'en-US', 1);\n            }}\n          >\n            <VolumeUpIcon\n              fontSize='small'\n            />\n          </Button>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Grammer;","type sentenceType = {\n  part: string,\n  sentence: string,\n  sentenceTrans: string,\n  dummyWord: string,\n}\n\nexport default class GrammerData {\n  static getFirstPart() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, [])[0];  \n  }\n\n  static getParts() {\n    return this.WORDS.reduce((val:string[], cur) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, []);  \n  }\n\n  static getSentences() {\n    return this.WORDS.reduce((val:sentenceType[], cur) => {\n      const w:sentenceType = {\n        part: cur.part,\n        sentence: cur.sentence, \n        sentenceTrans: cur.sentenceTrans,\n        dummyWord: cur.dummyWord,\n      };\n\n      if (!val.some(v => \n        v.part === w.part && v.sentence === w.sentence)) {\n        val.push(w);\n      }\n      return val;\n    }, []);  \n  }\n\n  static readonly WORDS = \n  [{\"id\":\"1\",\"part\":\"j1part01-unit01\",\"sentence\":\"Hello,  everyone.\",\"sentenceTrans\":\"みなさんこんにちは。\",\"dummyWord\":\"everybody\"},{\"id\":\"2\",\"part\":\"j1part01-unit01\",\"sentence\":\"I'm  Margaret  Brown.\",\"sentenceTrans\":\"私はマーガレットブラウンです。\",\"dummyWord\":\"You're\"},{\"id\":\"3\",\"part\":\"j1part01-unit01\",\"sentence\":\"Call  me  Meg.\",\"sentenceTrans\":\"メグと呼んで\",\"dummyWord\":\"Cell\"},{\"id\":\"4\",\"part\":\"j1part01-unit01\",\"sentence\":\"I'm  from  Australia.\",\"sentenceTrans\":\"私はオーストラリア出身です。\",\"dummyWord\":\"form\"},{\"id\":\"5\",\"part\":\"j1part01-unit01\",\"sentence\":\"I'm  twelve.\",\"sentenceTrans\":\"私は１２歳です。\",\"dummyWord\":\"twenty\"},{\"id\":\"6\",\"part\":\"j1part01-unit01\",\"sentence\":\"I  like  Japanese  food.\",\"sentenceTrans\":\"私は、日本食が好きです。\",\"dummyWord\":\"Japan\"},{\"id\":\"7\",\"part\":\"j1part01-unit01\",\"sentence\":\"I  love  sushi.\",\"sentenceTrans\":\"私は、寿司が好きです。\",\"dummyWord\":\"You\"},{\"id\":\"8\",\"part\":\"j1part01-unit01\",\"sentence\":\"I  often  drink  green  tea,  too.\",\"sentenceTrans\":\"私は、よく緑茶を飲みます。\",\"dummyWord\":\"is\"},{\"id\":\"9\",\"part\":\"j1part02-unit01\",\"sentence\":\"Are  you  from  Sydney?\",\"sentenceTrans\":\"あなたはシドニー出身ですか？\",\"dummyWord\":\"is\"},{\"id\":\"10\",\"part\":\"j1part02-unit01\",\"sentence\":\"Yes,  I  am.\",\"sentenceTrans\":\"はい、そうです。\",\"dummyWord\":\"are\"},{\"id\":\"11\",\"part\":\"j1part02-unit01\",\"sentence\":\"So,  are  you  a  rugby  fan?\",\"sentenceTrans\":\"それで、あなたはラグビーのファンですか？\",\"dummyWord\":\"is\"},{\"id\":\"12\",\"part\":\"j1part02-unit01\",\"sentence\":\"No,  I'm  not.\",\"sentenceTrans\":\"いいえ、違います。\",\"dummyWord\":\"is\"},{\"id\":\"13\",\"part\":\"j1part02-unit01\",\"sentence\":\"I'm  a  cricket  fan.\",\"sentenceTrans\":\"私はクリケットのファンです。\",\"dummyWord\":\"is\"},{\"id\":\"14\",\"part\":\"j1part02-unit01\",\"sentence\":\"Cricket?\",\"sentenceTrans\":\"クリケット？\",\"dummyWord\":\"soccer\"},{\"id\":\"15\",\"part\":\"j1part02-unit01\",\"sentence\":\"Do  you  play  it,  too?\",\"sentenceTrans\":\"あなたはプレーもしますか？\",\"dummyWord\":\"my\"},{\"id\":\"16\",\"part\":\"j1part02-unit01\",\"sentence\":\"No,  I  don't.\",\"sentenceTrans\":\"いいえ、しません。\",\"dummyWord\":\"know\"},{\"id\":\"17\",\"part\":\"j1part02-unit01\",\"sentence\":\"I   just   watch   it.\",\"sentenceTrans\":\"私は、見るだけです。\",\"dummyWord\":\"You\"},{\"id\":\"18\",\"part\":\"j1part02-unit01\",\"sentence\":\"How   about   soccer?\",\"sentenceTrans\":\"サッカーはどうですか？\",\"dummyWord\":\"you\"},{\"id\":\"19\",\"part\":\"j1part02-unit01\",\"sentence\":\"Do   you   like   soccer?\",\"sentenceTrans\":\"あなたは、サッカーが好きですか？\",\"dummyWord\":\"know\"},{\"id\":\"20\",\"part\":\"j1part02-unit01\",\"sentence\":\"Yes,   I   do.\",\"sentenceTrans\":\"はい、好きです。\",\"dummyWord\":\"are\"},{\"id\":\"21\",\"part\":\"j1part03-unit01\",\"sentence\":\"Do  you  play  badminton?\",\"sentenceTrans\":\"あなたはバトミントンをしますか？\",\"dummyWord\":\"Are\"},{\"id\":\"22\",\"part\":\"j1part03-unit01\",\"sentence\":\"Yes,  I  do.\",\"sentenceTrans\":\"はい、します。\",\"dummyWord\":\"can\"},{\"id\":\"23\",\"part\":\"j1part03-unit01\",\"sentence\":\"Good!  Me,  too.\",\"sentenceTrans\":\"いいですね。私もします。\",\"dummyWord\":\"to\"},{\"id\":\"24\",\"part\":\"j1part03-unit01\",\"sentence\":\"Well,  can  you  see  the  gym?\",\"sentenceTrans\":\"ところで、体育館が見えますか？\",\"dummyWord\":\"So\"},{\"id\":\"25\",\"part\":\"j1part03-unit01\",\"sentence\":\"Yes,  I  can.\",\"sentenceTrans\":\"はい、見えます。\",\"dummyWord\":\"me\"},{\"id\":\"26\",\"part\":\"j1part03-unit01\",\"sentence\":\"We  can  play  badminton there.\",\"sentenceTrans\":\"あそこでバドミントンをすることができますよ\",\"dummyWord\":\"thare\"},{\"id\":\"27\",\"part\":\"j1part03-unit01\",\"sentence\":\"Great.\",\"sentenceTrans\":\"すばらしいですね。\",\"dummyWord\":\"Good\"},{\"id\":\"28\",\"part\":\"j1part03-unit01\",\"sentence\":\"You're  a  good  player.\",\"sentenceTrans\":\"あなたはいい選手ですね。\",\"dummyWord\":\"player\"},{\"id\":\"29\",\"part\":\"j1part03-unit01\",\"sentence\":\"Thank  you.  Arigato.\",\"sentenceTrans\":\"ありがとう。ありがとう。\",\"dummyWord\":\"Thanks\"},{\"id\":\"30\",\"part\":\"j1part03-unit01\",\"sentence\":\"Oh,  you  speak  Japanese.\",\"sentenceTrans\":\"あら、日本語を話すんですね。\",\"dummyWord\":\"japanese\"},{\"id\":\"31\",\"part\":\"j1part03-unit01\",\"sentence\":\"Yes,  just  a  little.\",\"sentenceTrans\":\"はい、少しだけ。\",\"dummyWord\":\"littel\"},{\"id\":\"32\",\"part\":\"j1part03-unit01\",\"sentence\":\"I  study  it  every  day,  but  I  can't  read  kanji.\",\"sentenceTrans\":\"毎日勉強していますが、漢字を読むことができません。\",\"dummyWord\":\"raed\"}];\n}","import React, { useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Paginate from '../components/Pagination';\nimport Grammer from '../components/GrammerPage/Grammer';\nimport SideMenu from '../components/SideMenu';\nimport GrammerData from '../context/GrammerData';\nimport EnglishVoice from '../lib/EnglishVoice';\nimport { useSwipeable } from 'react-swipeable';\n\n\nconst GrammerPage:React.FC = () => {\n  const [slides, setSlides] = useState(GrammerData.getSentences().filter(w => w.part === GrammerData.getFirstPart()));\n  const [wordIndex, setWordIndex] = useState<number>(0);\n  const [currentPart, setCurrentPart] = useState<string>(GrammerData.getFirstPart());\n  const [answer, setAnswer] = useState<string[]>(slides[wordIndex].sentence.toLocaleLowerCase().slice(0, -1).split('  '));\n  const [isAnsComplated, setIsAnsComplated] = useState<boolean>(false);\n  const answerAddDummy = answer.slice();\n  answerAddDummy.push(slides[wordIndex].dummyWord.toLocaleLowerCase());\n  const [stockWords, setStockWords] = useState<string[]>(\n    answerAddDummy\n      .map(function (a) { return { weight: Math.random(), value: a } })\n      .sort(function (a, b) { return a.weight - b.weight })\n      .map(function (a) { return a.value })\n  );\n  const [ansWords, setAnsWords] = useState<string[]>([]);\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      const i:number = wordIndex - 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n      setWordIndex(i);\n      setAnswer(s);\n      const w:string[] = s.slice();\n      w.push(slides[i].dummyWord.toLocaleLowerCase());\n      setStockWords(shuffle(w));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      const i:number = wordIndex + 1;\n      const s:string[] = separateSentence(slides[i].sentence);\n\n      setWordIndex(i);\n      setAnswer(s);\n      const w:string[] = s.slice();\n      w.push(slides[i].dummyWord.toLocaleLowerCase());\n      setStockWords(shuffle(w));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeCurrentPart = (val: string) => {\n    if (currentPart !== val) {\n      const s = GrammerData.getSentences().filter(w => w.part === val);\n      setSlides(s)\n      setCurrentPart(val);\n      setWordIndex(0);\n\n      const a:string[] = separateSentence(s[0].sentence);\n      setAnswer(a);\n      a.push(s[0].dummyWord.toLocaleLowerCase());\n      setStockWords(shuffle(a));\n      setAnsWords([]);\n      setIsAnsComplated(false);\n    }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const moveAnsWords = (word: string, index: number) => {\n    const aw = ansWords;\n    const sw = stockWords.filter((v, i) => {\n      return i !== index;\n    });\n    aw.push(word);\n\n    setAnsWords(aw);\n    setStockWords(sw);\n\n    EnglishVoice.speech(word, 'en-US', 1);\n    if (answer.length === aw.length && answer.every((a, index) => a === aw[index])) {\n      setIsAnsComplated(true);\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    } else {\n      setIsAnsComplated(false);\n    }\n  }\n\n  const moveStockWords = (word: string, index: number) => {\n    const sw = stockWords;\n    const aw = ansWords.filter((v, i) => {\n      return i !== index;\n    });\n    sw.push(word);\n\n    setStockWords(sw);\n    setAnsWords(aw);\n    if (answer.length === aw.length && answer.every((a, index) => a === aw[index])) {\n      setIsAnsComplated(true);\n      EnglishVoice.speech('OK.' + slides[wordIndex].sentence, 'en-US', speechSpeedRate);\n    } else {\n      setIsAnsComplated(false);\n    }\n  }\n\n  const separateSentence = (s:string) => {\n    return s.toLocaleLowerCase().slice(0, -1).split('  ');\n  }\n\n  const shuffle = (w:string[]) => {\n    return w.map(function (a) { return { weight: Math.random(), value: a } })\n    .sort(function (a, b) { return a.weight - b.weight })\n    .map(function (a) { return a.value })\n  }\n\n  const swipeHandles = useSwipeable({\n    onSwipedLeft: (e) => {\n      if (e.absX >= 140 ) {\n        slideNext();\n      }\n    },\n    onSwipedRight: (e) => {\n      if (e.absX >= 140) {\n        slidePrev();\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  return (\n    <>\n      <SideMenu\n        parts={GrammerData.getParts()}\n        currentPart={currentPart}\n        changeCurrentPart={(val) => changeCurrentPart(val)}\n        speechSpeedRate={speechSpeedRate}\n        changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n      />\n      <Container>\n        <Paginate\n          index={wordIndex}\n          maxPage={slides.length}\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        <div {...swipeHandles}>\n          <Grammer\n            answer={answer}\n            stockWords={stockWords}\n            ansWords={ansWords}\n            sentence={slides[wordIndex].sentence}\n            translate={slides[wordIndex].sentenceTrans}\n            isAnsComplated={isAnsComplated}\n            moveAnsWords={(w, i) => moveAnsWords(w, i)}\n            moveStockWords={(w, i) => moveStockWords(w, i)}\n          />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default GrammerPage;","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport 'fontsource-roboto';\nimport GlobalMenu from './components/GlobalMenu';\nimport WordPage from './pages/WordPage';\nimport WordGrammerPage from './pages/WordGrammerPage';\nimport GrammerPage from './pages/GrammerPage';\n\ninterface AppProps {\n}\n\ninterface AppState {\n  currentPage: pageNames\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    const sPage:readonly string[] = ['WordPage'];\n    const cPage:pageNames = 'WordPage';\n    this.state = {\n      currentPage: cPage\n    }\n  }\n\n  render () {\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: colors.blue[800],\n        },\n        type: 'dark',\n      },\n    });\n\n    const changePage = (val: pageNames) => {\n      this.setState({\n        currentPage: val\n      })\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {\n          this.state.currentPage === 'WordPage'\n          &&\n          <WordPage />\n        }\n        {\n          this.state.currentPage === 'WordGrammerPage'\n          &&\n          <WordGrammerPage />\n        }\n        {\n          this.state.currentPage === 'GrammerPage'\n          &&\n          <GrammerPage />\n        }\n        <GlobalMenu\n            currentPage={this.state.currentPage}\n            changeCurrentPage= {(val) => changePage(val)}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}